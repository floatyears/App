import public "base.proto";

package bbproto;

enum EValueType{
	FIXED 		= 1;
	MULTIPLE	= 2;
	PERCENT		= 3;
	SECOND		= 4;
	ROUND		= 5;
	COLORTYPE	= 6;
	RANDOMCOLOR	= 7;
};

enum EAttackType {
	ATK_SINGLE		= 0;
	ATK_ALL			= 1;
	RECOVER_HP		= 2;
};

enum EBoostType {
	BOOST_ATTACK	= 0;
	BOOST_HP		= 1;
};

enum EBoostTarget {
	UNIT_RACE	= 0;
	UNIT_TYPE	= 1;
};

enum EPeriod {
	EP_RIGHT_NOW	= 0; 
	EP_EVERY_ROUND = 1; // every round 
	EP_EVERY_STEP  = 2; // every moving step
};

//==================Active Skills: 14 kinds=====================================================

message SkillSingleAttack {
	optional EValueType type = 1; //FIXED | MULTIPLE
	optional float value = 2; //fixed:1000,10000,150000 | 100xATK
	optional EUnitType unitType = 3; //
};

message SkillAllAttack {
	optional EValueType type = 1; //FIXED | MULTIPLE
	optional float value = 2; //fixed:1000,10000,150000 | 100xATK
	optional EUnitType unitType = 3; //
};

message SkillSingleAtkRecoverHP { //single attack & recover HP to 100%
	optional EValueType type = 1; 	// MULTIPLE
	optional float value = 2; 	 	// 0.5x,1x,2x,3x,5x
};

message SkillSuicideAttack { //attack target and HP reduce to 1
	optional EValueType type = 1;	// 1:single | 2:all
	optional float value = 2;		// fixed:1000,10000,150000 | 100xATK
};

message SkillTargetTypeAttack { //only attack target type
	optional EValueType type = 1;	// 1:fixed 2:multiple
	optional float value = 2;		// 35000, 1.5x
	optional int32 period = 3;		// valid period ->  0:all time, 1: 1 round, n: n rounds...
	optional EUnitType unitType = 4;//
};

message SkillKillHP { //kill all people's HP
	optional EValueType type = 1; 	// 3:percent
	optional float		value = 2; 	// in percent: 11=11%, 15=15%, 30=30%
};

message SkillRecoverHP { 
	optional EValueType	type = 1;   // FIXED, PERCENT
	optional float 		value = 2;  //
	optional EPeriod 	period = 3; // optional: 1:every round 2:every moving step
};

message SkillRecoverSP { 
	optional EValueType	type = 1;  // FIXED
	optional float 		value = 2; // in step
};

message SkillReduceHurt { //reduce hurt x percent
	optional EValueType	type = 1;		// 3:percent
	optional float 		value = 2;		// in percent: 11=11%, 15=15%, 30=30%
	optional int32 		period = 3; 	// valid period ->  0:all time, 1: 1 round, n: n rounds...
	optional EUnitType	unitType = 4;	// target unit type
};

message SkillReduceDefence { 
	optional EValueType	type = 1;  //PERCENT
	optional float 		value = 2; //in step
	optional int32 		period = 3; //valid period ->  0:all time, 1: 1 round, n: n rounds...	
};

message SkillDeferAttackRound { //defer enemy attack
	optional EValueType	type = 1;  //ROUND
	optional float 		value = 2;
};

message SkillPoison { //defer enemy attack
	optional EValueType	type = 1;  //ROUND
	optional float 		value = 2;
};

message SkillDelayTime { //increase time for moving color block
	optional EValueType	type = 1;  //SECOND
	optional float 		value = 2; //1s, 2s
};

message SkillConvertUnitType { //convert one type to another type
	optional EValueType	type 	= 1;  		//COLORTYPE | RANDOMCOLOR
	optional EUnitType 	unitType1 = 2;  //from type
	optional EUnitType 	unitType2 = 3;  //target type
};

//---------------------------------------------------------------------------

message ActiveSkill {
	optional int32  no = 1;		//skill number
	optional string name = 2;	//skill name
	optional string desc = 3;	//skill description

//total 14 active skills
	optional SkillSingleAttack 			singleAttack		= 4;
	optional SkillAllAttack 			allAttack			= 5;
	optional SkillSingleAtkRecoverHP 	singleAtkRecoverHP	= 6;	//single attack & recover HP to 100%
	optional SkillSuicideAttack			suicideAttack		= 7;
	optional SkillTargetTypeAttack		targetTypeAttack	= 8;
	optional SkillKillHP 				killHP				= 9;
	optional SkillRecoverHP				recoverHP			= 10;
	optional SkillRecoverSP				recoverSP			= 11;
	optional SkillReduceHurt 			reduceHurt			= 12;
	optional SkillReduceDefence			reduceDefence		= 13;
	optional SkillDeferAttackRound 		deferAttackRound	= 14;
	optional SkillPoison				poison				= 15;
	optional SkillDelayTime 			delayTime			= 16; 	//increase time for moving color block
	optional SkillConvertUnitType 		convertUnitType		= 17;	//convert one type to another type													 
};


//==================PassiveSkill Skills: 2 kinds=====================================================
//
message SkillDodgeTrap {
		optional int32 trapLevel = 2;
};

message SkillAntiAttack {
		optional int32 probability 	= 1;
		optional int32 antiAtkRatio	= 2;
};

message PassiveSkill {
	optional int32  no = 1;
	optional string name = 2;
	optional string desc = 3;

	optional SkillAntiAttack antiAttack	= 4;
	optional SkillDodgeTrap	dodgeTrap	= 5;
};

//==================NormalSkill Skills=====================================================

message NormalSkill {
	optional int32  no = 1;
	optional string name = 2;
	optional string desc = 3;

	optional EAttackType attackType = 4; //SINGLE,ALL,RECOVER_HP
	repeated uint32 activeBlocks 	= 5; //[0,0],[1,1,1] => [Fire,Fire],[Water,Water,Water]
	optional float attackValue		= 6; //1.5xATK | 10%
};


//==================LeaderSkill Skills=====================================================

message SkillBoost {
	optional EBoostType 	boostType	= 1; // BOOST_ATTACK | BOOST_HP
	optional float 			boostValue	= 2; // 1.5x, 2.0x
	optional EBoostTarget 	targetType	= 3; // UNIT_RACE | UNIT_TYPE
	optional int32 			targetValue = 4; // target race
};

message SkillExtraAttack {
	optional EUnitType	unitType	= 1; //target unit type
	optional float		attackValue	= 2; //1.5x, 2.0x, 2.5x
};

message LeaderSkill {
	optional int32  no 		= 1;
	optional string name 	= 2;
	optional string desc 	= 3;
	optional SkillBoost				raceBoost	= 4;
	optional SkillRecoverHP			recoverHP	= 5; //recover HP every round
	optional SkillReduceHurt		reduceHurt	= 6; 
	optional SkillDelayTime			delayTime	= 7;
	optional SkillConvertUnitType	convertUnitType	= 8;
	optional SkillExtraAttack		extraAttack	= 9;
};

//==========================================================================================

