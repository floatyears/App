import public "base.proto";
import public "unit.proto";

package bbproto;

message UserInfo {
	optional string		uuid				= 1;
	optional uint32		userId				= 2;
	optional string		userName			= 3;
	optional string		password			= 4;
	optional string		nickName			= 5;
	optional int32		rank				= 6;
	optional int32		exp					= 7;
	optional int32		staminaNow			= 8;
	optional int32		staminaMax			= 9; 
	optional uint32		staminaRecover		= 10;//recover time
	optional int32		friendMax			= 11;
	optional int32		unitMax				= 12;
	optional int32		costMax				= 13;	
	optional UserUnit	unit				= 14; //leader unit
    optional uint32		regTime     		= 15; //user register time
}

message UserInfoDetail {
	optional UserInfo		user				= 1;
	optional AccountInfo	account				= 2;
	optional QuestLog		quest				= 3;
	repeated UserUnit		unitList			= 4;
	optional PartyInfo		party				= 5;
	optional LoginInfo		login				= 6;
	optional QuestClearInfo	questClear			= 7;
	optional bytes			unitFavoriteFlag	= 8;
	optional bytes			haveUnitFlag		= 9;	//got unit
	optional bytes			meetUnitFlag		= 10;	//meet unit
    optional bytes			userGuideFlag		= 11;
}

message AccountInfo {
	optional int32	review						= 1;
	optional int32	payTotal					= 2;
	optional int32	payMonth					= 3;
	optional int32	money						= 4;
	optional int32	stonePay					= 5;
	optional int32	stoneFree					= 6;
	optional int32	stone						= 7;
	optional int32	friendPoint					= 8;
	optional int32	firstSelectNum				= 9;
}

message StageClearItem {
	optional uint32	stageId						= 1;
	optional uint32	questId						= 2;
}

message QuestClearInfo {
	optional StageClearItem		storyClear		= 1;
	repeated StageClearItem		eventClear		= 2;
}

message PartyItem {
	optional int32 unitPos						= 1;
	optional uint32 unitUniqueId				= 2;
}

message UnitParty {
    optional int32      id						= 1;
	repeated PartyItem  items					= 2;
}

message PartyInfo {
	repeated UnitParty		partyList			= 1;
	optional int32			currentParty		= 2;
}

message TerminalInfo {
	optional string	channel						= 1; // app market channel
	optional string	deviceName					= 2; // 
	optional string	uuid						= 3; 
	optional string	os		 					= 4; // android / ios
}

enum EBonusType{
    CHAIN_LOGIN = 1;
    TOTAL_LOGIN = 2;
    RANK_REACH  = 3;
    COMPENSATION  = 4;
    OTHER_EVENT  = 5;
}

enum EGiftContent {
    COIN            = 1;
    FRIEND_POINT    = 2;
    CHIP            = 3;
    UNIT            = 4;
}

message GiftItem {
    optional int32      	content				= 1; //coin, friendPoint, chip, unit
    optional int32		    value				= 2; //unitId
    optional int32		    count				= 3; //
}

message BonusInfo {
    optional int32          id                  = 1;
    optional int32          type    			= 2; //chainLogin, totalLogin, RankReach
	optional int32		    matchValue			= 3; //
    optional uint32         validTime           = 4;
    optional string         message				= 5; //optional
    repeated GiftItem       giftItem            = 6;
    optional int32		    enabled 			= 7; //
    optional int32		    tag					= 8; //
}

message LoginInfo {
	optional int32		loginTotal				= 1; // login times in total
	optional int32		loginChain				= 2;
	optional int32		friendPointGet			= 3;
	optional int32		friendHelpCount			= 4;
	optional uint32		lastLoginTime			= 5;
    optional uint32		lastPlayTime            = 6;
    repeated BonusInfo  bonus					= 7;
    optional int32		maxBonusId              = 8;
    repeated int32      onceBonusId	    		= 9; //accepted bonus id for once bonus
    optional int32		loginDayTotal			= 10; //login days in total
}

message PresentInfo {
	optional uint32		id      				= 1;
	optional uint32		sendTime				= 2;
	optional uint32		type					= 3;
	optional uint32		value1					= 4;
	optional uint32		value2					= 5;
	optional string		message					= 6;
}

message SessionInfo {
	optional string		sessionId				= 1;
	optional string		uuid					= 2;
	optional uint32		userId					= 3;
	optional uint32		questId					= 4;
}
//-------------------------------------------------

message ReqGetUserInfo {
	optional ProtoHeader	header				= 1;
	optional uint32			userId				= 2;
}

message RspGetUserInfo {
	optional ProtoHeader	header				= 1;
	optional UserInfo		user				= 2;
}

//-------------------------------------------------
message NoticeItem {
    optional string			title				= 1;
    optional string			message				= 2;
}

message NoticeInfo {
    repeated NoticeItem		items				= 1;
}

message ReqAuthUser {
	optional ProtoHeader	header				= 1;
	optional TerminalInfo	terminal			= 2;
	optional uint32			selectRole			= 3;
	optional int32			appVersion			= 4;
}

message RspAuthUser {
	optional ProtoHeader	header				= 1;
	optional UserInfo		user				= 2;
	optional AccountInfo	account				= 3;
	optional QuestLog		quest				= 4;
	repeated UserUnit		unitList			= 5;
	optional PartyInfo		party				= 6;
	optional uint32			serverTime			= 7;
	optional LoginInfo		login				= 8;
	repeated FriendInfo		friends				= 9;
	repeated PresentInfo	present				= 10;
	optional EUnitType		evolveType			= 11;
	optional QuestClearInfo	questClear			= 12;
	optional int32			isNewUser			= 13;
	optional bytes			haveUnitFlag		= 14;
	optional bytes			meetUnitFlag		= 15;
	optional int32			newAppVersion		= 16;
	optional string			appUrl				= 17;
    optional int32			userGuideStep		= 18;
	optional NoticeInfo		notice				= 19;
    repeated StageInfo      eventList           = 20;
}

//-------------------------------------------------
message ReqLoginPack {
	optional ProtoHeader	header				= 1;
	optional bool			getLogin			= 2;
	optional bool			getFriend			= 3;
	optional bool			getHelper			= 4;
	optional bool			getPresent			= 5;
}

message RspLoginPack {
	optional ProtoHeader	header				= 1;
	optional LoginInfo		login				= 2;
	repeated FriendInfo		friends				= 9;
	repeated PresentInfo	present				= 4;
}

//-------------------------------------------------

message ReqRenameNick {
	optional ProtoHeader	header				= 1;
	optional string			newNickName			= 2;
}

message RspRenameNick {
	optional ProtoHeader	header				= 1;
	optional string			newNickName			= 2;
}

//-------------------------------------------------

message ReqRestoreStamina {
	optional ProtoHeader	header				= 1;
}

message RspRestoreStamina {
	optional ProtoHeader	header				= 1;
	optional int32			staminaNow			= 2; // current stamina
	optional int32			staminaMax			= 3; 	
	optional uint32			staminaRecover		= 4; // stamina recover time
	optional int32			stone				= 5;
}

//-------------------------------------------------
message ReqChangeParty {
	optional ProtoHeader	header				= 1;
	optional PartyInfo		party				= 2;
}

message RspChangeParty {
	optional ProtoHeader	header				= 1;
}

//-------------------------------------------------
message ReqUnitMaxExpand {
	optional ProtoHeader	header				= 1;
}

message RspUnitMaxExpand {
	optional ProtoHeader	header				= 1;
	optional int32			unitMax				= 2;
	optional int32			stone				= 3;
}

//-------------------------------------------------
message ReqFriendMaxExpand {
	optional ProtoHeader	header				= 1;
}

message RspFriendMaxExpand {
	optional ProtoHeader	header				= 1;
	optional int32			friendMax			= 2;	
	optional int32			stone				= 3;
}

//-------------------------------------------------
message ReqFinishUserGuide {
    optional ProtoHeader	header				= 1;
    optional int32			step				= 2;
}

message RspFinishUserGuide {
	optional ProtoHeader	header				= 1;
    optional int32          nowStep             = 2;
}

message ReqAcceptBonus {
    optional ProtoHeader	header				= 1;
    repeated int32			bonusId				= 2;
}

message RspAcceptBonus {
    optional ProtoHeader	header				= 1;
}