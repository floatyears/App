import public "base.proto";
import public "unit.proto";

package bbproto;

message UserInfo {
	optional string		uuid				= 1;
	optional uint32		userId				= 2;
	optional string		userName			= 3;
	optional int32		rank				= 4;
	optional int32		exp					= 5;
	optional int32		staminaNow			= 6;
	optional int32		staminaMax			= 7;
	optional uint32		staminaRecover		= 8; //recover time
	optional UserUnit	unit				= 9; //leader unit	
};

message AccountInfo {
	optional uint32	userId				= 1;
	optional uint32	review				= 2;
	optional uint32	payTotal			= 3;
	optional uint32	payMonth			= 4;
	optional uint32	money				= 5;
	optional uint32	stonePay			= 6;
	optional uint32	stoneFree			= 7;
	optional uint32	stone				= 8;
	optional uint32	friendPoint			= 9;
	optional uint32	totalUnit			= 10;
	optional uint32	totalParty			= 11;
	optional uint32	totalFriend			= 12;
	optional uint32	firstSelectNum		= 13;
};

message UserQuestInfo {
	optional int32	questId				= 1;
	optional bool	questCleared		= 2;
};

message PartyItem {
	optional int32 unitPos				= 1;
	optional int32 unitUniqueId			= 2;
};

message UnitParty {
    optional int32      id				= 1;
	repeated PartyItem  items			= 2;
};

message UserInfoDetail {
	optional UserInfo		user				= 1;
	optional AccountInfo	account				= 2;
	optional UserQuestInfo	quest				= 3;
	repeated UnitParty		partyList			= 4;
	optional int32			currentParty		= 5;
	optional LoginInfo		login				= 6;
};

message TerminalInfo {
	optional string	channel						= 1; // app market channel
	optional string	deviceName					= 2; // 
	optional string	uuid						= 3; 
	optional string	os		 					= 4; // android / ios
};

enum EFriendState{
	ISFRIEND		= 1; // is already friend
	FRIENDOUT		= 2; // I request add one as friend
	FRIENDIN		= 3; // others request add me as friend
	FRIENDHELPER	= 4; // friends allocated by system  
};

message FriendData {
	optional uint32			userId				= 1;
	optional EFriendState	friendState			= 2; 
	optional uint32			friendStateUpdate 	= 3; // friend state updated time
};

message FriendInfo {
	optional uint32			userId				= 1;
	optional string 		userName			= 2;
	optional int32			rank				= 3;
	optional uint32			lastPlayTime		= 4;
	optional EFriendState	friendState			= 5; // 
	optional uint32			friendStateUpdate 	= 6; // friend state updated time
	optional int32			friendPoint			= 7;
	optional UserUnit		unit				= 8;
};

message LoginBonus {
	optional int32		type					= 1;
	optional int32		value					= 2;
	optional int32		bonusType				= 3;	
};

message LoginInfo {
	optional int32		loginTotal				= 1;
	optional int32		loginChain				= 2;
	optional uint32		lastLoginTime			= 3;
	optional uint32		lastPlayTime			= 4;
	optional int32		friendPointGet			= 5;
	optional int32		friendHelpCount			= 6;
	repeated LoginBonus bonus					= 7;
};

message PresentInfo {
	optional uint32		serialId				= 1;
	optional uint32		sendTime				= 2;
	optional uint32		type					= 3;
	optional uint32		value1					= 4;
	optional uint32		value2					= 5;
	optional string		message					= 6;
};

message SessionInfo {
	optional string		sessionId				= 1;
	optional string		uuid					= 2;
	optional uint32		userId					= 3;
	optional uint32		questId					= 4;
};
//-------------------------------------------------

message ReqGetUserInfo {
	optional ProtoHeader	header				= 1;
	optional uint32			userId				= 2;
};

message RspGetUserInfo {
	optional ProtoHeader	header				= 1;
	optional UserInfo		user				= 2;
};

//-------------------------------------------------
message ReqAuthUser {
	optional ProtoHeader	header				= 1;
	optional TerminalInfo	terminal			= 2;	
};

message RspAuthUser {
	optional ProtoHeader	header				= 1;
	optional UserInfo		user				= 2;
	optional AccountInfo	account				= 3;
	optional UserQuestInfo	quest				= 4;	
	repeated UnitParty		unitPartyList		= 5;
	optional int32			currentUnitParty	= 6;
	optional uint32			serverTime			= 7;
	optional LoginInfo		login				= 8;
	repeated FriendInfo		friend				= 9;
	repeated FriendInfo		helper				= 10;
	repeated PresentInfo	present				= 11;	
};

//-------------------------------------------------
message ReqLoginPack {
	optional ProtoHeader	header				= 1;
	optional bool			getLogin			= 3;
	optional bool			getFriend			= 4;
	optional bool			getHelper			= 5;
	optional bool			getPresent			= 6;
};

message RspLoginPack {
	optional ProtoHeader	header				= 1;
	optional LoginInfo		login				= 2;
	repeated FriendInfo		friend				= 3;
	repeated FriendInfo		helper				= 4;
	repeated PresentInfo	present				= 5;
};

//-------------------------------------------------
message ReqModifyUnitParty {
    repeated UnitParty      partys				= 1;
};

