import public "base.proto";
import public "unit.proto";
import public "user.proto";

package bbproto;


enum EQuestState {
	QS_NEW		= 0;
	QS_CLEARED	= 1;
};

enum ETrapType {
	Move			= 0;
	StateException	= 1;
	ChangeEnvir		= 2;
	Injured			= 3;
};

//-------------------------------------------------------------
message TreasureBox {
	optional int32		rate			= 1; // appear rate
	optional int32		minCoin			= 2; 
	optional int32		maxCoin			= 3;
};

message EnemyInfos {
	optional int32		randomNum		= 1;
	repeated EnemyInfo		enemys		= 3; // enemy list	
};

message EnemyInfo {
	required uint32		uniqueId		= 1;
	required uint32		unitId			= 2;
	optional EUnitType	type			= 3;
	optional int32		hp				= 4;
	optional int32		attack			= 5;
	optional int32		defense			= 6;
	optional int32		nextAttack		= 7; // next 1, 2, 3
	optional uint32		dropUnitId		= 8;
	optional uint32		dropUnitLevel	= 9;
	optional float		dropRate		= 10;
	optional float		plusRate		= 11; // "+" drop rate
};

message QuestGrid {
	optional int32			repeatNum	= 1; // appear count
	optional int32			star		= 2; // 1 - 6 star
	optional int32			color		= 3; // star color
	repeated EnemyInfo		enemys		= 4; // enemy list
	optional int32			coins		= 5;
	optional TrapInfo		trap		= 6;	
};

message QuestInfo {
	required uint32		id				= 1; 
	optional int32		state			= 2; // CLEAR or NEW
	optional int32		no				= 3; // number: 1, 2, 3...
	optional string		name			= 4; // quest name
	optional string		story			= 5; // story description
	optional int32		stamina 		= 6; // cost stamina
	optional int32		floor			= 7;		
	optional int32		rewardExp		= 8;
	optional int32		rewardCoin		= 9;
	repeated uint32		allUnitKind 	= 10; // pick-up enemy unit list
	repeated EnemyInfo	boss			= 11; // boss unit
	repeated QuestGrid	gridInfo		= 12; // 25 grids
};

//-------------------------------------------------------------

message ReqStartQuest {
	optional ProtoHeader	header			= 1;
	optional uint32			questId			= 2; 
	optional uint32			questState		= 3; // QS_NEW | QS_CLEARED
	optional uint32			helperUserId	= 4; 
	optional UserUnit		helperUnit		= 5; 
	optional uint32			currentParty	= 6; 	
};

message RspStartQuest {
	optional ProtoHeader	header			= 1;
	optional uint32			questId			= 2; 
	optional uint32			staminaNow		= 3; // current stamina
	optional uint32			staminaRecover	= 4; // stamina recover time
};

message ReqClearQuset {
	optional ProtoHeader	header 			= 1; 
	optional uint32			questId			= 2; 
	optional uint32			securityKey		= 3; 
	optional uint32			getMoney		= 4; 
	optional uint32			getExp			= 5; 
	repeated UserUnit		getUnit			= 6; 	
};

message RspClearQuset {
	optional ProtoHeader	header			= 1;
	optional UserInfo		user			= 2;
	optional AccountInfo	acount			= 3;	
	optional uint32			getMoney		= 4;
	optional uint32			getExp			= 5;	
	repeated uint32			getUnit			= 6; //uniqueId list
};

message ReqGetQuestInfo {
	optional ProtoHeader	header 			= 1;
};

message RspGetQuestInfo {
	optional ProtoHeader 	header 			= 1;
	optional uint32			questId			= 2; // 
	optional uint32			currentStatus	= 3; // current quest status
};

//=========== Trap ====================================================================//
message TrapInjuredValue {
	optional int32		trapIndex		= 1;
	optional int32		trapLevel		= 2;
	optional float		trapValue		= 3;
};

message TrapInfo {
	required uint32				trapID		= 1;
	optional ETrapType			trapType	= 2;
	optional int32				valueIndex	= 3;
	repeated TrapInjuredValue	injuredInfo	= 4;
	optional int32				effectType	= 5;
};

