import public "bbproto.proto";
package bbproto;

enum EValueType{
	FIXED 		= 1;
	MULTIPLE	= 2;
	PERCENT		= 3;
	SECOND		= 4;
	ROUND		= 5;
	COLORTYPE	= 6;
	RANDOMCOLOR	= 7;
};

enum EAttackType {
	ATK_SINGLE		= 0;
	ATK_ALL			= 1;
	RECOVER_HP		= 2;
};

enum EBoostType {
	BOOST_ATTACK	= 0;
	BOOST_HP		= 1;
};

enum EBoostTarget {
	UNIT_RACE	= 0;
	UNIT_TYPE	= 1;
};

enum EPeriod {
	EP_RIGHT_NOW	= 0; 
	EP_EVERY_ROUND	= 1; // every round 
	EP_EVERY_STEP 	= 2; // every moving step
};

//==================Active Skills: 14 kinds=====================================================

message SkillBase {
    optional int32  id              = 1;
    optional string name            = 2;
    optional string description     = 3;
}


message SkillSingleAttack {
    optional SkillBase  baseInfo    = 1;
	optional EValueType type 		= 2; //FIXED | MULTIPLE
	optional float		value		= 3; //fixed:1000,10000,150000 | 100xATK
	optional EUnitType	unitType 	= 4; //
};

message SkillAllAttack {
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2; //FIXED | MULTIPLE
	optional float		value 		= 3; //fixed:1000,10000,150000 | 100xATK
	optional EUnitType	unitType 	= 4; //
};

message SkillSingleAtkRecoverHP { //single attack & recover HP to 100%
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2; 	    // MULTIPLE
	optional float		value		= 3; 	 	// 0.5x,1x,2x,3x,5x
};

message SkillSuicideAttack { //attack target and HP reduce to 1
    optional SkillBase      baseInfo    = 1;
	optional EValueType		type	    = 2;	// 1:single | 2:all
	optional float			value	    = 3;		// fixed:1000,10000,150000 | 100xATK
};

message SkillTargetTypeAttack { //only attack target type
    optional SkillBase      baseInfo    = 1;
	optional EValueType		type		= 2;	// 1:fixed 2:multiple
	optional float			value		= 3;		// 35000, 1.5x
	optional int32			period		= 4;		// valid period ->  0:all time, 1: 1 round, n: n rounds...
	optional EUnitType		unitType	= 5;
};

message SkillKillHP { //kill all people's HP
    optional SkillBase  baseInfo    = 1;
	optional EValueType		type	= 2; 	// 3:percent
	optional float			value	= 3; 	// in percent: 11=11%, 15=15%, 30=30%
};

message SkillRecoverHP { 
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2;   // FIXED, PERCENT
	optional float 		value		= 3;  //
	optional EPeriod 	period		= 4; // optional: 1:every round 2:every moving step
};

message SkillRecoverSP { 
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2;    // FIXED
	optional float 		value		= 3;    // in step
};

message SkillReduceHurt { //reduce hurt x percent
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2;		// 3:percent
	optional float 		value		= 3;		// in percent: 11=11%, 15=15%, 30=30%
	optional EPeriod    period		= 4; 	    // 
    optional int32      periodValue = 5;        //valid period ->  0:all time, 1: 1 round, n: n rounds...
	optional EUnitType	unitType	= 6;	    // target unit type
};

message SkillReduceDefence { 
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2;  //PERCENT
	optional float 		value		= 3; //in step
	optional int32 		period		= 4; //valid period ->  0:all time, 1: 1 round, n: n rounds...	
};

message SkillDeferAttackRound { //defer enemy attack
    optional SkillBase baseInfo     = 1;
	optional EValueType	type		= 2;  //ROUND
	optional float 		value		= 3;
};

message SkillPoison { //defer enemy attack
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2;  //ROUND
	optional float 		value		= 3;
};

message SkillDelayTime { //increase time for moving color block
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2;  //SECOND
	optional float 		value		= 3; //1s, 2s
};

message SkillConvertUnitType { //convert one type to another type
    optional SkillBase  baseInfo    = 1;
	optional EValueType	type		= 2;  		//COLORTYPE | RANDOMCOLOR
	optional EUnitType 	unitType1	= 3;  //from type
	optional EUnitType 	unitType2	= 4;  //target type
};

//---------------------------------------------------------------------------

//message ActiveSkill {
	//optional int32  no				= 1; //skill number
	//optional string name			= 2; //skill name
	//optional string description		= 3; //skill description

	//optional int32  singleAttack		= 4;
	//optional int32  allAttack			= 5;
	//optional int32  singleAtkRecoverHP	= 6;	//single attack & recover HP to 100%
	//optional int32  suicideAttack		= 7;
	//optional int32  targetTypeAttack	= 8;
	//optional int32  killHP				= 9;
	//optional int32  recoverHP			= 10;
	//optional int32  recoverSP			= 11;
	//optional int32  reduceHurt			= 12;
	//optional int32  reduceDefence		= 13;
	//optional int32  eferAttackRound 	= 14;
	//optional int32  poison				= 15;
	//optional int32  delayTime			= 16; 	//increase time for moving color block
	//optional int32  convertUnitType		= 17;	//convert one type to another


    //total 14 active skills
	//optional SkillSingleAttack 			singleAttack		= 4;
	//optional SkillAllAttack 			allAttack			= 5;
	//optional SkillSingleAtkRecoverHP 	singleAtkRecoverHP	= 6;	//single attack & recover HP to 100%
	//optional SkillSuicideAttack			suicideAttack		= 7;
	//optional SkillTargetTypeAttack		targetTypeAttack	= 8;
	//optional SkillKillHP 				killHP				= 9;
	//optional SkillRecoverHP				recoverHP			= 10;
	//optional SkillRecoverSP				recoverSP			= 11;
	//optional SkillReduceHurt 			reduceHurt			= 12;
	//optional SkillReduceDefence			reduceDefence		= 13;
	//optional SkillDeferAttackRound 		deferAttackRound	= 14;
	//optional SkillPoison				poison				= 15;
	//optional SkillDelayTime 			delayTime			= 16; 	//increase time for moving color block
	//optional SkillConvertUnitType 		convertUnitType		= 17;	//convert one type to another type	
//};


//==================PassiveSkill Skills: 2 kinds=====================================================
//
message SkillDodgeTrap {
        optional SkillBase  baseInfo    = 1;
		optional int32      trapLevel	= 2;
};

message SkillAntiAttack {
        optional SkillBase  baseInfo        = 1;
		optional int32      probability 	= 2;
		optional int32      antiAtkRatio	= 3;
};

//message PassiveSkill {
	//optional SkillBase  baseInfo    = 1;
    //optional int32      antiAttack      = 2;
    //optional int32      dodgeTrap       = 3;
	//optional SkillAntiAttack	antiAttack	= 4;
	//optional SkillDodgeTrap		dodgeTrap	= 5;
//};

//==================NormalSkill Skills=====================================================

message NormalSkill {
	optional SkillBase  baseInfo    = 1;

	optional EAttackType attackType = 2; //SINGLE,ALL,RECOVER_HP
	repeated uint32 activeBlocks 	= 3; //[0,0],[1,1,1] => [Fire,Fire],[Water,Water,Water]
	optional float attackValue		= 4; //1.5xATK | 10%
};


//==================LeaderSkill Skills=====================================================

message SkillBoost {
    optional SkillBase      baseInfo    = 1;
	optional EBoostType 	boostType	= 2; // BOOST_ATTACK | BOOST_HP
	optional float 			boostValue	= 3; // 1.5x, 2.0x
	optional EBoostTarget 	targetType	= 4; // UNIT_RACE | UNIT_TYPE
	optional int32 			targetValue = 5; // target race
};

message SkillExtraAttack {
    optional SkillBase  baseInfo    = 1;
	optional EUnitType	unitType	= 2; //target unit type
	optional float		attackValue	= 3; //1.5x, 2.0x, 2.5x
};



//message LeaderSkill {
	//optional int32  no				= 1; //skill number
	//optional string name			= 2; //skill name
	//optional string description		= 3; //skill description
	//optional int32  raceBoost		= 4;
	//optional int32  recoverHP		= 5; //recover HP every round
	//optional int32  reduceHurt		= 6; 
	//optional int32  delayTime		= 7;
	//optional int32  convertUnitType	= 8;
	//optional int32  extraAttack		= 9;
	//optional SkillBoost                raceBoost        = 4;
    //optional SkillRecoverHP            recoverHP        = 5; //recover HP every round
    //optional SkillReduceHurt        reduceHurt        = 6; 
    //optional SkillDelayTime            delayTime        = 7;
    //optional SkillConvertUnitType    convertUnitType    = 8;
    //optional SkillExtraAttack        extraAttack        = 9;
//};

//==========================================================================================

