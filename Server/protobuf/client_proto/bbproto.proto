package bbproto;
//=====================================================

enum EUnitType{
	UALL	= 0; // all type
	UFIRE 	= 1;
	UWATER	= 2;
	UWIND	= 3;
	ULIGHT	= 4;
	UDARK	= 5;
	UNONE	= 6;
    UHeart  = 7;
};

enum EUnitRace{
    ALL             = 0; //all race
    HUMAN           = 1;
    UNDEAD          = 2;
    MYTHIC          = 3;
    BEAST           = 4;
    MONSTER         = 5;
    LEGEND          = 6;
    SCREAMCHEESE    = 7;
};

//general response protocol
message ProtoHeader {
	required string apiVer		= 1;
	optional string sessionId	= 2;
	optional uint32 userId		= 3;
	optional int32	packetId	= 4;
	optional int32	code		= 5; // result code
	optional string error		= 6; // result error description
};


//=====================================================

//-------------------------------------------------
message ReqGetFriend {
	optional ProtoHeader	header				= 1;
	optional bool			getFriend			= 4;
	optional bool			getHelper			= 5;
};

message RspGetFriend {
	optional ProtoHeader	header				= 1;
	repeated FriendInfo		friend				= 3;
	repeated FriendInfo		helper				= 4;
};

//-------------------------------------------------
message ReqFindFriend {
	optional ProtoHeader	header				= 1;
	optional uint32			friendUid			= 2;
};

message RspFindFriend {
	optional ProtoHeader	header				= 1;
	optional UserInfo		friend				= 2;
};

//-------------------------------------------------
message ReqAddFriend {
	optional ProtoHeader	header				= 1;
	optional uint32			friendUid			= 2;
};

message RspAddFriend {
	optional ProtoHeader	header				= 1;
	optional uint32			result				= 2;
};

//-------------------------------------------------
message ReqDelFriend {
	optional ProtoHeader	header				= 1;
	optional uint32			friendUid			= 2;
};

message RspDelFriend {
	optional ProtoHeader	header				= 1;
	optional uint32			result				= 2;
};

//-------------------------------------------------
message ReqAcceptFriend {
	optional ProtoHeader	header				= 1;
	optional uint32			friendUid			= 2;
};

message RspAcceptFriend {
	optional ProtoHeader	header				= 1;
	optional uint32			result				= 2;
};
//-------------------------------------------------

//=====================================================


enum EQuestState {
	QS_NEW		= 0;
	QS_CLEARED	= 1;
};

message ReqStartQuest {
	optional ProtoHeader	header			= 1;
	optional uint32			questId			= 2; 
	optional uint32			questState		= 3; // QS_NEW | QS_CLEARED
	optional uint32			helperUserId	= 4; 
	optional UserUnit		helperUnit		= 5; 
	optional uint32			currentParty	= 6; 	
};

message RspStartQuest {
	optional ProtoHeader	header			= 1;
	optional uint32			questId			= 2; 
	optional uint32			staminaNow		= 3; // current stamina
	optional uint32			staminaRecover	= 4; // stamina recover time
};

message ReqClearQuset {
	optional ProtoHeader	header 			= 1; 
	optional uint32			questId			= 2; 
	optional uint32			securityKey		= 3; 
	optional uint32			getMoney		= 4; 
	optional uint32			getExp			= 5; 
	repeated UserUnit		getUnit			= 6; 	
};

message RspClearQuset {
	optional ProtoHeader	header			= 1;
	optional UserInfo		user			= 2;
	optional AccountInfo	acount			= 3;	
	optional uint32			getMoney		= 4;
	optional uint32			getExp			= 5;	
	repeated uint32			getUnit			= 6; //uniqueId list
};

message ReqGetQuestInfo {
	optional ProtoHeader	header 			= 1;
};

message RspGetQuestInfo {
	optional ProtoHeader 	header 			= 1;
	optional uint32			questId			= 2; // 
	optional uint32			currentStatus	= 3; // current quest status
};


//=====================================================

message UnitResource { 
	required uint32			id			= 1;
	optional string			path		= 2; // resource download path
	optional int32			size		= 3; // resource size in bytes
    repeated string         fileName    = 4; // file name list
    optional int32          version     = 5; // file version
};

message UserUnit {  //unit instance
	required uint32 uniqueId	= 1;
	optional uint32 unitId		= 2;
	optional int32 exp			= 3;
	optional int32 level		= 4;
	optional int32 addAttack	= 5;
	optional int32 addDefence	= 6;
	optional int32 addHp		= 7;
	optional int32 limitbreakLv	= 8;
	optional int32 getTime		= 9;
};

message ReqGetUnitResource {
	optional ProtoHeader	header	= 1;
	repeated uint32			unitId	= 2;
};

message RspGetUnitResource {
	optional ProtoHeader	header	= 1;
	optional string			server	= 2; // server address
	repeated UnitResource	unitres	= 3; // unit download path list
};

message ReqGetUserUnit {	// get unit instance info
	optional ProtoHeader	header	= 1;
	repeated uint32			unitId	= 2;
};

message RspGetUserUnit {
	optional ProtoHeader	header	= 1;
	repeated UserUnit		unit	= 2;
};

//=====================================================

message UserInfo {
	optional string		uuid				= 1;
	optional uint32		userId				= 2;
	optional string		userName			= 3;
	optional int32		rank				= 4;
	optional int32		exp					= 5;
	optional int32		staminaNow			= 6;
	optional int32		staminaMax			= 7;
	optional uint32		staminaRecover		= 8; //recover time
	optional UserUnit	unit				= 9; //leader unit	
};

message AccountInfo {
	optional uint32	userId				= 1;
	optional uint32	review				= 2;
	optional uint32	payTotal			= 3;
	optional uint32	payMonth			= 4;
	optional uint32	money				= 5;
	optional uint32	stonePay			= 6;
	optional uint32	stoneFree			= 7;
	optional uint32	stone				= 8;
	optional uint32	friendPoint			= 9;
	optional uint32	totalUnit			= 10;
	optional uint32	totalParty			= 11;
	optional uint32	totalFriend			= 12;
	optional uint32	firstSelectNum		= 13;
};

message UserQuestInfo {
	optional int32	questId				= 1;
	optional bool	questCleared		= 2;
};

message PartyItem {
	optional int32 unitPos				= 1;
	optional int32 unitUniqueId			= 2;
};

message UnitParty {
    optional int32      id				= 1;
	repeated PartyItem  items			= 2;
};

message UserInfoDetail {
	optional UserInfo		user				= 1;
	optional AccountInfo	account				= 2;
	optional UserQuestInfo	quest				= 3;
	repeated UnitParty		partyList			= 4;
	optional int32			currentParty		= 5;
	optional LoginInfo		login				= 6;
};

message TerminalInfo {
	optional string	channel						= 1; // app market channel
	optional string	deviceName					= 2; // 
	optional string	uuid						= 3; 
	optional string	os		 					= 4; // android / ios
};

enum EFriendState{
	ISFRIEND		= 1; // is already friend
	FRIENDOUT		= 2; // I request add one as friend
	FRIENDIN		= 3; // others request add me as friend
	FRIENDHELPER	= 4; // friends allocated by system  
};

message FriendData {
	optional uint32			userId				= 1;
	optional EFriendState	friendState			= 2; 
	optional uint32			friendStateUpdate 	= 3; // friend state updated time
};

message FriendInfo {
	optional uint32			userId				= 1;
	optional string 		userName			= 2;
	optional int32			rank				= 3;
	optional uint32			lastPlayTime		= 4;
	optional EFriendState	friendState			= 5; // 
	optional uint32			friendStateUpdate 	= 6; // friend state updated time
	optional int32			friendPoint			= 7;
	optional UserUnit		unit				= 8;
};

message LoginBonus {
	optional int32		type					= 1;
	optional int32		value					= 2;
	optional int32		bonusType				= 3;	
};

message LoginInfo {
	optional int32		loginTotal				= 1;
	optional int32		loginChain				= 2;
	optional uint32		lastLoginTime			= 3;
	optional uint32		lastPlayTime			= 4;
	optional int32		friendPointGet			= 5;
	optional int32		friendHelpCount			= 6;
	repeated LoginBonus bonus					= 7;
};

message PresentInfo {
	optional uint32		serialId				= 1;
	optional uint32		sendTime				= 2;
	optional uint32		type					= 3;
	optional uint32		value1					= 4;
	optional uint32		value2					= 5;
	optional string		message					= 6;
};

message SessionInfo {
	optional string		sessionId				= 1;
	optional string		uuid					= 2;
	optional uint32		userId					= 3;
	optional uint32		questId					= 4;
};
//-------------------------------------------------

message ReqGetUserInfo {
	optional ProtoHeader	header				= 1;
	optional uint32			userId				= 2;
};

message RspGetUserInfo {
	optional ProtoHeader	header				= 1;
	optional UserInfo		user				= 2;
};

//-------------------------------------------------
message ReqAuthUser {
	optional ProtoHeader	header				= 1;
	optional TerminalInfo	terminal			= 2;	
};

message RspAuthUser {
	optional ProtoHeader	header				= 1;
	optional UserInfo		user				= 2;
	optional AccountInfo	account				= 3;
	optional UserQuestInfo	quest				= 4;	
	repeated UnitParty		unitPartyList		= 5;
	optional int32			currentUnitParty	= 6;
	optional uint32			serverTime			= 7;
	optional LoginInfo		login				= 8;
	repeated FriendInfo		friend				= 9;
	repeated FriendInfo		helper				= 10;
	repeated PresentInfo	present				= 11;	
};

//-------------------------------------------------
message ReqLoginPack {
	optional ProtoHeader	header				= 1;
	optional bool			getLogin			= 3;
	optional bool			getFriend			= 4;
	optional bool			getHelper			= 5;
	optional bool			getPresent			= 6;
};

message RspLoginPack {
	optional ProtoHeader	header				= 1;
	optional LoginInfo		login				= 2;
	repeated FriendInfo		friend				= 3;
	repeated FriendInfo		helper				= 4;
	repeated PresentInfo	present				= 5;
};

//-------------------------------------------------
message ReqModifyUnitParty {
    repeated UnitParty      partys				= 1;
};

