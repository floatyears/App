// Code generated by protoc-gen-go.
// source: quest.proto
// DO NOT EDIT!

package bbproto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"
import bbproto1 "base.pb"
import bbproto3 "unit.pb"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// Request from public import base.proto
type Request bbproto1.Request

func (m *Request) Reset()               { (*bbproto1.Request)(m).Reset() }
func (m *Request) String() string       { return (*bbproto1.Request)(m).String() }
func (*Request) ProtoMessage()          {}
func (m *Request) GetApiVer() string    { return (*bbproto1.Request)(m).GetApiVer() }
func (m *Request) GetSessionId() string { return (*bbproto1.Request)(m).GetSessionId() }
func (m *Request) GetPacketId() int32   { return (*bbproto1.Request)(m).GetPacketId() }

// Response from public import base.proto
type Response bbproto1.Response

func (m *Response) Reset()             { (*bbproto1.Response)(m).Reset() }
func (m *Response) String() string     { return (*bbproto1.Response)(m).String() }
func (*Response) ProtoMessage()        {}
func (m *Response) GetApiVer() string  { return (*bbproto1.Response)(m).GetApiVer() }
func (m *Response) GetCode() int32     { return (*bbproto1.Response)(m).GetCode() }
func (m *Response) GetError() string   { return (*bbproto1.Response)(m).GetError() }
func (m *Response) GetPacketId() int32 { return (*bbproto1.Response)(m).GetPacketId() }

// EUnitType from public import base.proto
type EUnitType bbproto1.EUnitType

var EUnitType_name = bbproto1.EUnitType_name
var EUnitType_value = bbproto1.EUnitType_value

func NewEUnitType(x EUnitType) *EUnitType { e := EUnitType(x); return &e }

const EUnitType_UALL = EUnitType(bbproto1.EUnitType_UALL)
const EUnitType_UFIRE = EUnitType(bbproto1.EUnitType_UFIRE)
const EUnitType_UWATER = EUnitType(bbproto1.EUnitType_UWATER)
const EUnitType_UWIND = EUnitType(bbproto1.EUnitType_UWIND)
const EUnitType_ULIGHT = EUnitType(bbproto1.EUnitType_ULIGHT)
const EUnitType_UDARK = EUnitType(bbproto1.EUnitType_UDARK)
const EUnitType_UNONE = EUnitType(bbproto1.EUnitType_UNONE)

// UnitStatus from public import unit.proto
type UnitStatus bbproto3.UnitStatus

func (m *UnitStatus) Reset()              { (*bbproto3.UnitStatus)(m).Reset() }
func (m *UnitStatus) String() string      { return (*bbproto3.UnitStatus)(m).String() }
func (*UnitStatus) ProtoMessage()         {}
func (m *UnitStatus) GetType() int32      { return (*bbproto3.UnitStatus)(m).GetType() }
func (m *UnitStatus) GetRace() int32      { return (*bbproto3.UnitStatus)(m).GetRace() }
func (m *UnitStatus) GetRare() int32      { return (*bbproto3.UnitStatus)(m).GetRare() }
func (m *UnitStatus) GetHp() int32        { return (*bbproto3.UnitStatus)(m).GetHp() }
func (m *UnitStatus) GetAttack() int32    { return (*bbproto3.UnitStatus)(m).GetAttack() }
func (m *UnitStatus) GetDefence() int32   { return (*bbproto3.UnitStatus)(m).GetDefence() }
func (m *UnitStatus) GetLevel() int32     { return (*bbproto3.UnitStatus)(m).GetLevel() }
func (m *UnitStatus) GetNextLvExp() int32 { return (*bbproto3.UnitStatus)(m).GetNextLvExp() }
func (m *UnitStatus) GetCost() int32      { return (*bbproto3.UnitStatus)(m).GetCost() }

// UnitInfo from public import unit.proto
type UnitInfo bbproto3.UnitInfo

func (m *UnitInfo) Reset()             { (*bbproto3.UnitInfo)(m).Reset() }
func (m *UnitInfo) String() string     { return (*bbproto3.UnitInfo)(m).String() }
func (*UnitInfo) ProtoMessage()        {}
func (m *UnitInfo) GetId() int32       { return (*bbproto3.UnitInfo)(m).GetId() }
func (m *UnitInfo) GetName() string    { return (*bbproto3.UnitInfo)(m).GetName() }
func (m *UnitInfo) GetMaxLevel() int32 { return (*bbproto3.UnitInfo)(m).GetMaxLevel() }
func (m *UnitInfo) GetExpType() int32  { return (*bbproto3.UnitInfo)(m).GetExpType() }
func (m *UnitInfo) GetProfile() string { return (*bbproto3.UnitInfo)(m).GetProfile() }

// Unit from public import unit.proto
type Unit bbproto3.Unit

func (m *Unit) Reset()                 { (*bbproto3.Unit)(m).Reset() }
func (m *Unit) String() string         { return (*bbproto3.Unit)(m).String() }
func (*Unit) ProtoMessage()            {}
func (m *Unit) GetUniqueId() int32     { return (*bbproto3.Unit)(m).GetUniqueId() }
func (m *Unit) GetId() int32           { return (*bbproto3.Unit)(m).GetId() }
func (m *Unit) GetExp() int32          { return (*bbproto3.Unit)(m).GetExp() }
func (m *Unit) GetLevel() int32        { return (*bbproto3.Unit)(m).GetLevel() }
func (m *Unit) GetAttack() int32       { return (*bbproto3.Unit)(m).GetAttack() }
func (m *Unit) GetDefense() int32      { return (*bbproto3.Unit)(m).GetDefense() }
func (m *Unit) GetHp() int32           { return (*bbproto3.Unit)(m).GetHp() }
func (m *Unit) GetAddAttack() int32    { return (*bbproto3.Unit)(m).GetAddAttack() }
func (m *Unit) GetAddDefence() int32   { return (*bbproto3.Unit)(m).GetAddDefence() }
func (m *Unit) GetAddHp() int32        { return (*bbproto3.Unit)(m).GetAddHp() }
func (m *Unit) GetLimitbreakLv() int32 { return (*bbproto3.Unit)(m).GetLimitbreakLv() }
func (m *Unit) GetGetTime() int32      { return (*bbproto3.Unit)(m).GetGetTime() }

// ReqGetUnitInfo from public import unit.proto
type ReqGetUnitInfo bbproto3.ReqGetUnitInfo

func (m *ReqGetUnitInfo) Reset()              { (*bbproto3.ReqGetUnitInfo)(m).Reset() }
func (m *ReqGetUnitInfo) String() string      { return (*bbproto3.ReqGetUnitInfo)(m).String() }
func (*ReqGetUnitInfo) ProtoMessage()         {}
func (m *ReqGetUnitInfo) GetUnitIds() []int32 { return (*bbproto3.ReqGetUnitInfo)(m).GetUnitIds() }

// RspGetUnitInfo from public import unit.proto
type RspGetUnitInfo bbproto3.RspGetUnitInfo

func (m *RspGetUnitInfo) Reset()         { (*bbproto3.RspGetUnitInfo)(m).Reset() }
func (m *RspGetUnitInfo) String() string { return (*bbproto3.RspGetUnitInfo)(m).String() }
func (*RspGetUnitInfo) ProtoMessage()    {}
func (m *RspGetUnitInfo) GetUnitinfos() []*UnitInfo {
	o := (*bbproto3.RspGetUnitInfo)(m).GetUnitinfos()
	if o == nil {
		return nil
	}
	s := make([]*UnitInfo, len(o))
	for i, x := range o {
		s[i] = (*UnitInfo)(x)
	}
	return s
}

// ReqGetUnit from public import unit.proto
type ReqGetUnit bbproto3.ReqGetUnit

func (m *ReqGetUnit) Reset()              { (*bbproto3.ReqGetUnit)(m).Reset() }
func (m *ReqGetUnit) String() string      { return (*bbproto3.ReqGetUnit)(m).String() }
func (*ReqGetUnit) ProtoMessage()         {}
func (m *ReqGetUnit) GetUnitIds() []int32 { return (*bbproto3.ReqGetUnit)(m).GetUnitIds() }

// RspGetUnit from public import unit.proto
type RspGetUnit bbproto3.RspGetUnit

func (m *RspGetUnit) Reset()         { (*bbproto3.RspGetUnit)(m).Reset() }
func (m *RspGetUnit) String() string { return (*bbproto3.RspGetUnit)(m).String() }
func (*RspGetUnit) ProtoMessage()    {}
func (m *RspGetUnit) GetUnits() []*Unit {
	o := (*bbproto3.RspGetUnit)(m).GetUnits()
	if o == nil {
		return nil
	}
	s := make([]*Unit, len(o))
	for i, x := range o {
		s[i] = (*Unit)(x)
	}
	return s
}

type EnemyInfo struct {
	UnitId           *int32   `protobuf:"varint,1,req,name=unitId" json:"unitId,omitempty"`
	Hp               *int32   `protobuf:"varint,2,opt,name=hp" json:"hp,omitempty"`
	Attack           *int32   `protobuf:"varint,3,opt,name=attack" json:"attack,omitempty"`
	Defense          *int32   `protobuf:"varint,4,opt,name=defense" json:"defense,omitempty"`
	AttackRound      *int32   `protobuf:"varint,5,opt,name=attackRound" json:"attackRound,omitempty"`
	DropRatio        *float32 `protobuf:"fixed32,6,opt,name=dropRatio" json:"dropRatio,omitempty"`
	DropUnitId       *float32 `protobuf:"fixed32,7,opt,name=dropUnitId" json:"dropUnitId,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *EnemyInfo) Reset()         { *m = EnemyInfo{} }
func (m *EnemyInfo) String() string { return proto.CompactTextString(m) }
func (*EnemyInfo) ProtoMessage()    {}

func (m *EnemyInfo) GetUnitId() int32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *EnemyInfo) GetHp() int32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *EnemyInfo) GetAttack() int32 {
	if m != nil && m.Attack != nil {
		return *m.Attack
	}
	return 0
}

func (m *EnemyInfo) GetDefense() int32 {
	if m != nil && m.Defense != nil {
		return *m.Defense
	}
	return 0
}

func (m *EnemyInfo) GetAttackRound() int32 {
	if m != nil && m.AttackRound != nil {
		return *m.AttackRound
	}
	return 0
}

func (m *EnemyInfo) GetDropRatio() float32 {
	if m != nil && m.DropRatio != nil {
		return *m.DropRatio
	}
	return 0
}

func (m *EnemyInfo) GetDropUnitId() float32 {
	if m != nil && m.DropUnitId != nil {
		return *m.DropUnitId
	}
	return 0
}

type QuestInfo struct {
	Id               *int32             `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	State            *int32             `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	No               *int32             `protobuf:"varint,3,opt,name=no" json:"no,omitempty"`
	Name             *string            `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Desc             *string            `protobuf:"bytes,5,opt,name=desc" json:"desc,omitempty"`
	Stamina          *int32             `protobuf:"varint,6,opt,name=stamina" json:"stamina,omitempty"`
	Floor            *int32             `protobuf:"varint,7,opt,name=floor" json:"floor,omitempty"`
	RewardExp        *int32             `protobuf:"varint,8,opt,name=rewardExp" json:"rewardExp,omitempty"`
	RewardCoin       *int32             `protobuf:"varint,9,opt,name=rewardCoin" json:"rewardCoin,omitempty"`
	AllUnitKind      []int32            `protobuf:"varint,10,rep,name=allUnitKind" json:"allUnitKind,omitempty"`
	EnemyUnit        []*EnemyInfo       `protobuf:"bytes,11,rep,name=enemyUnit" json:"enemyUnit,omitempty"`
	Boss             *bbproto3.UnitInfo `protobuf:"bytes,12,opt,name=boss" json:"boss,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *QuestInfo) Reset()         { *m = QuestInfo{} }
func (m *QuestInfo) String() string { return proto.CompactTextString(m) }
func (*QuestInfo) ProtoMessage()    {}

func (m *QuestInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *QuestInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *QuestInfo) GetNo() int32 {
	if m != nil && m.No != nil {
		return *m.No
	}
	return 0
}

func (m *QuestInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *QuestInfo) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *QuestInfo) GetStamina() int32 {
	if m != nil && m.Stamina != nil {
		return *m.Stamina
	}
	return 0
}

func (m *QuestInfo) GetFloor() int32 {
	if m != nil && m.Floor != nil {
		return *m.Floor
	}
	return 0
}

func (m *QuestInfo) GetRewardExp() int32 {
	if m != nil && m.RewardExp != nil {
		return *m.RewardExp
	}
	return 0
}

func (m *QuestInfo) GetRewardCoin() int32 {
	if m != nil && m.RewardCoin != nil {
		return *m.RewardCoin
	}
	return 0
}

func (m *QuestInfo) GetAllUnitKind() []int32 {
	if m != nil {
		return m.AllUnitKind
	}
	return nil
}

func (m *QuestInfo) GetEnemyUnit() []*EnemyInfo {
	if m != nil {
		return m.EnemyUnit
	}
	return nil
}

func (m *QuestInfo) GetBoss() *bbproto3.UnitInfo {
	if m != nil {
		return m.Boss
	}
	return nil
}

type QuestMapInfo struct {
	Version          *int32       `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Id               *int32       `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Type             *int32       `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Quests           []*QuestInfo `protobuf:"bytes,4,rep,name=quests" json:"quests,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *QuestMapInfo) Reset()         { *m = QuestMapInfo{} }
func (m *QuestMapInfo) String() string { return proto.CompactTextString(m) }
func (*QuestMapInfo) ProtoMessage()    {}

func (m *QuestMapInfo) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *QuestMapInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *QuestMapInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *QuestMapInfo) GetQuests() []*QuestInfo {
	if m != nil {
		return m.Quests
	}
	return nil
}

type ReqGetQuestMap struct {
	Header           *bbproto1.Request `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StartId          *int32            `protobuf:"varint,2,opt,name=startId" json:"startId,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ReqGetQuestMap) Reset()         { *m = ReqGetQuestMap{} }
func (m *ReqGetQuestMap) String() string { return proto.CompactTextString(m) }
func (*ReqGetQuestMap) ProtoMessage()    {}

func (m *ReqGetQuestMap) GetHeader() *bbproto1.Request {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetQuestMap) GetStartId() int32 {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return 0
}

type RspGetQuestMap struct {
	Header           *bbproto1.Response `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Maps             []*QuestMapInfo    `protobuf:"bytes,2,rep,name=maps" json:"maps,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *RspGetQuestMap) Reset()         { *m = RspGetQuestMap{} }
func (m *RspGetQuestMap) String() string { return proto.CompactTextString(m) }
func (*RspGetQuestMap) ProtoMessage()    {}

func (m *RspGetQuestMap) GetHeader() *bbproto1.Response {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetQuestMap) GetMaps() []*QuestMapInfo {
	if m != nil {
		return m.Maps
	}
	return nil
}

func init() {
}
