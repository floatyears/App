// Code generated by protoc-gen-go.
// source: base.proto
// DO NOT EDIT!

package bbproto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// general request protocol
type Request struct {
	Version          *int32  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	CliVer           *string `protobuf:"bytes,2,opt,name=cli_ver" json:"cli_ver,omitempty"`
	Userid           *int32  `protobuf:"varint,3,opt,name=userid" json:"userid,omitempty"`
	Username         *string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

func (m *Request) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *Request) GetCliVer() string {
	if m != nil && m.CliVer != nil {
		return *m.CliVer
	}
	return ""
}

func (m *Request) GetUserid() int32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *Request) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

// general response protocol
type Response struct {
	Version          *int32  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Result           *int32  `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	Data             *string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}

func (m *Response) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *Response) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *Response) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func init() {
}
