// Code generated by protoc-gen-go.
// source: bbproto.proto
// DO NOT EDIT!

package bbproto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type EUnitType int32

const (
	EUnitType_UALL   EUnitType = 0
	EUnitType_UFIRE  EUnitType = 1
	EUnitType_UWATER EUnitType = 2
	EUnitType_UWIND  EUnitType = 3
	EUnitType_ULIGHT EUnitType = 4
	EUnitType_UDARK  EUnitType = 5
	EUnitType_UNONE  EUnitType = 6
	EUnitType_UHeart EUnitType = 7
)

var EUnitType_name = map[int32]string{
	0: "UALL",
	1: "UFIRE",
	2: "UWATER",
	3: "UWIND",
	4: "ULIGHT",
	5: "UDARK",
	6: "UNONE",
	7: "UHeart",
}
var EUnitType_value = map[string]int32{
	"UALL":   0,
	"UFIRE":  1,
	"UWATER": 2,
	"UWIND":  3,
	"ULIGHT": 4,
	"UDARK":  5,
	"UNONE":  6,
	"UHeart": 7,
}

func (x EUnitType) Enum() *EUnitType {
	p := new(EUnitType)
	*p = x
	return p
}
func (x EUnitType) String() string {
	return proto.EnumName(EUnitType_name, int32(x))
}
func (x *EUnitType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EUnitType_value, data, "EUnitType")
	if err != nil {
		return err
	}
	*x = EUnitType(value)
	return nil
}

type EUnitRace int32

const (
	EUnitRace_ALL          EUnitRace = 0
	EUnitRace_HUMAN        EUnitRace = 1
	EUnitRace_UNDEAD       EUnitRace = 2
	EUnitRace_MYTHIC       EUnitRace = 3
	EUnitRace_BEAST        EUnitRace = 4
	EUnitRace_MONSTER      EUnitRace = 5
	EUnitRace_LEGEND       EUnitRace = 6
	EUnitRace_SCREAMCHEESE EUnitRace = 7
)

var EUnitRace_name = map[int32]string{
	0: "ALL",
	1: "HUMAN",
	2: "UNDEAD",
	3: "MYTHIC",
	4: "BEAST",
	5: "MONSTER",
	6: "LEGEND",
	7: "SCREAMCHEESE",
}
var EUnitRace_value = map[string]int32{
	"ALL":          0,
	"HUMAN":        1,
	"UNDEAD":       2,
	"MYTHIC":       3,
	"BEAST":        4,
	"MONSTER":      5,
	"LEGEND":       6,
	"SCREAMCHEESE": 7,
}

func (x EUnitRace) Enum() *EUnitRace {
	p := new(EUnitRace)
	*p = x
	return p
}
func (x EUnitRace) String() string {
	return proto.EnumName(EUnitRace_name, int32(x))
}
func (x *EUnitRace) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EUnitRace_value, data, "EUnitRace")
	if err != nil {
		return err
	}
	*x = EUnitRace(value)
	return nil
}

type EQuestState int32

const (
	EQuestState_QS_NEW     EQuestState = 0
	EQuestState_QS_CLEARED EQuestState = 1
)

var EQuestState_name = map[int32]string{
	0: "QS_NEW",
	1: "QS_CLEARED",
}
var EQuestState_value = map[string]int32{
	"QS_NEW":     0,
	"QS_CLEARED": 1,
}

func (x EQuestState) Enum() *EQuestState {
	p := new(EQuestState)
	*p = x
	return p
}
func (x EQuestState) String() string {
	return proto.EnumName(EQuestState_name, int32(x))
}
func (x *EQuestState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EQuestState_value, data, "EQuestState")
	if err != nil {
		return err
	}
	*x = EQuestState(value)
	return nil
}

type EFriendState int32

const (
	EFriendState_ISFRIEND     EFriendState = 1
	EFriendState_FRIENDOUT    EFriendState = 2
	EFriendState_FRIENDIN     EFriendState = 3
	EFriendState_FRIENDHELPER EFriendState = 4
)

var EFriendState_name = map[int32]string{
	1: "ISFRIEND",
	2: "FRIENDOUT",
	3: "FRIENDIN",
	4: "FRIENDHELPER",
}
var EFriendState_value = map[string]int32{
	"ISFRIEND":     1,
	"FRIENDOUT":    2,
	"FRIENDIN":     3,
	"FRIENDHELPER": 4,
}

func (x EFriendState) Enum() *EFriendState {
	p := new(EFriendState)
	*p = x
	return p
}
func (x EFriendState) String() string {
	return proto.EnumName(EFriendState_name, int32(x))
}
func (x *EFriendState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EFriendState_value, data, "EFriendState")
	if err != nil {
		return err
	}
	*x = EFriendState(value)
	return nil
}

// general response protocol
type ProtoHeader struct {
	ApiVer           *string `protobuf:"bytes,1,req,name=apiVer" json:"apiVer,omitempty"`
	SessionId        *string `protobuf:"bytes,2,opt,name=sessionId" json:"sessionId,omitempty"`
	UserId           *uint32 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	PacketId         *int32  `protobuf:"varint,4,opt,name=packetId" json:"packetId,omitempty"`
	Code             *int32  `protobuf:"varint,5,opt,name=code" json:"code,omitempty"`
	Error            *string `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoHeader) Reset()         { *m = ProtoHeader{} }
func (m *ProtoHeader) String() string { return proto.CompactTextString(m) }
func (*ProtoHeader) ProtoMessage()    {}

func (m *ProtoHeader) GetApiVer() string {
	if m != nil && m.ApiVer != nil {
		return *m.ApiVer
	}
	return ""
}

func (m *ProtoHeader) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *ProtoHeader) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ProtoHeader) GetPacketId() int32 {
	if m != nil && m.PacketId != nil {
		return *m.PacketId
	}
	return 0
}

func (m *ProtoHeader) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ProtoHeader) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type ReqStartQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	QuestState       *uint32      `protobuf:"varint,3,opt,name=questState" json:"questState,omitempty"`
	HelperUserId     *uint32      `protobuf:"varint,4,opt,name=helperUserId" json:"helperUserId,omitempty"`
	HelperUnit       *UserUnit    `protobuf:"bytes,5,opt,name=helperUnit" json:"helperUnit,omitempty"`
	CurrentParty     *uint32      `protobuf:"varint,6,opt,name=currentParty" json:"currentParty,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqStartQuest) Reset()         { *m = ReqStartQuest{} }
func (m *ReqStartQuest) String() string { return proto.CompactTextString(m) }
func (*ReqStartQuest) ProtoMessage()    {}

func (m *ReqStartQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqStartQuest) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ReqStartQuest) GetQuestState() uint32 {
	if m != nil && m.QuestState != nil {
		return *m.QuestState
	}
	return 0
}

func (m *ReqStartQuest) GetHelperUserId() uint32 {
	if m != nil && m.HelperUserId != nil {
		return *m.HelperUserId
	}
	return 0
}

func (m *ReqStartQuest) GetHelperUnit() *UserUnit {
	if m != nil {
		return m.HelperUnit
	}
	return nil
}

func (m *ReqStartQuest) GetCurrentParty() uint32 {
	if m != nil && m.CurrentParty != nil {
		return *m.CurrentParty
	}
	return 0
}

type RspStartQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	StaminaNow       *uint32      `protobuf:"varint,3,opt,name=staminaNow" json:"staminaNow,omitempty"`
	StaminaRecover   *uint32      `protobuf:"varint,4,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspStartQuest) Reset()         { *m = RspStartQuest{} }
func (m *RspStartQuest) String() string { return proto.CompactTextString(m) }
func (*RspStartQuest) ProtoMessage()    {}

func (m *RspStartQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspStartQuest) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *RspStartQuest) GetStaminaNow() uint32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return 0
}

func (m *RspStartQuest) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

type ReqClearQuset struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	SecurityKey      *uint32      `protobuf:"varint,3,opt,name=securityKey" json:"securityKey,omitempty"`
	GetMoney         *uint32      `protobuf:"varint,4,opt,name=getMoney" json:"getMoney,omitempty"`
	GetExp           *uint32      `protobuf:"varint,5,opt,name=getExp" json:"getExp,omitempty"`
	GetUnit          []*UserUnit  `protobuf:"bytes,6,rep,name=getUnit" json:"getUnit,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqClearQuset) Reset()         { *m = ReqClearQuset{} }
func (m *ReqClearQuset) String() string { return proto.CompactTextString(m) }
func (*ReqClearQuset) ProtoMessage()    {}

func (m *ReqClearQuset) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqClearQuset) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ReqClearQuset) GetSecurityKey() uint32 {
	if m != nil && m.SecurityKey != nil {
		return *m.SecurityKey
	}
	return 0
}

func (m *ReqClearQuset) GetGetMoney() uint32 {
	if m != nil && m.GetMoney != nil {
		return *m.GetMoney
	}
	return 0
}

func (m *ReqClearQuset) GetGetExp() uint32 {
	if m != nil && m.GetExp != nil {
		return *m.GetExp
	}
	return 0
}

func (m *ReqClearQuset) GetGetUnit() []*UserUnit {
	if m != nil {
		return m.GetUnit
	}
	return nil
}

type RspClearQuset struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *UserInfo    `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Acount           *AccountInfo `protobuf:"bytes,3,opt,name=acount" json:"acount,omitempty"`
	GetMoney         *uint32      `protobuf:"varint,4,opt,name=getMoney" json:"getMoney,omitempty"`
	GetExp           *uint32      `protobuf:"varint,5,opt,name=getExp" json:"getExp,omitempty"`
	GetUnit          []uint32     `protobuf:"varint,6,rep,name=getUnit" json:"getUnit,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspClearQuset) Reset()         { *m = RspClearQuset{} }
func (m *RspClearQuset) String() string { return proto.CompactTextString(m) }
func (*RspClearQuset) ProtoMessage()    {}

func (m *RspClearQuset) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspClearQuset) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *RspClearQuset) GetAcount() *AccountInfo {
	if m != nil {
		return m.Acount
	}
	return nil
}

func (m *RspClearQuset) GetGetMoney() uint32 {
	if m != nil && m.GetMoney != nil {
		return *m.GetMoney
	}
	return 0
}

func (m *RspClearQuset) GetGetExp() uint32 {
	if m != nil && m.GetExp != nil {
		return *m.GetExp
	}
	return 0
}

func (m *RspClearQuset) GetGetUnit() []uint32 {
	if m != nil {
		return m.GetUnit
	}
	return nil
}

type ReqGetQuestInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetQuestInfo) Reset()         { *m = ReqGetQuestInfo{} }
func (m *ReqGetQuestInfo) String() string { return proto.CompactTextString(m) }
func (*ReqGetQuestInfo) ProtoMessage()    {}

func (m *ReqGetQuestInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RspGetQuestInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	CurrentStatus    *uint32      `protobuf:"varint,3,opt,name=currentStatus" json:"currentStatus,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetQuestInfo) Reset()         { *m = RspGetQuestInfo{} }
func (m *RspGetQuestInfo) String() string { return proto.CompactTextString(m) }
func (*RspGetQuestInfo) ProtoMessage()    {}

func (m *RspGetQuestInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetQuestInfo) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *RspGetQuestInfo) GetCurrentStatus() uint32 {
	if m != nil && m.CurrentStatus != nil {
		return *m.CurrentStatus
	}
	return 0
}

type UnitResource struct {
	Id               *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Path             *string  `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Size             *int32   `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	FileName         []string `protobuf:"bytes,4,rep,name=fileName" json:"fileName,omitempty"`
	Version          *int32   `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UnitResource) Reset()         { *m = UnitResource{} }
func (m *UnitResource) String() string { return proto.CompactTextString(m) }
func (*UnitResource) ProtoMessage()    {}

func (m *UnitResource) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UnitResource) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *UnitResource) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *UnitResource) GetFileName() []string {
	if m != nil {
		return m.FileName
	}
	return nil
}

func (m *UnitResource) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type UserUnit struct {
	UniqueId         *uint32 `protobuf:"varint,1,req,name=uniqueId" json:"uniqueId,omitempty"`
	UnitId           *uint32 `protobuf:"varint,2,opt,name=unitId" json:"unitId,omitempty"`
	Exp              *int32  `protobuf:"varint,3,opt,name=exp" json:"exp,omitempty"`
	Level            *int32  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	AddAttack        *int32  `protobuf:"varint,5,opt,name=addAttack" json:"addAttack,omitempty"`
	AddDefence       *int32  `protobuf:"varint,6,opt,name=addDefence" json:"addDefence,omitempty"`
	AddHp            *int32  `protobuf:"varint,7,opt,name=addHp" json:"addHp,omitempty"`
	LimitbreakLv     *int32  `protobuf:"varint,8,opt,name=limitbreakLv" json:"limitbreakLv,omitempty"`
	GetTime          *int32  `protobuf:"varint,9,opt,name=getTime" json:"getTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserUnit) Reset()         { *m = UserUnit{} }
func (m *UserUnit) String() string { return proto.CompactTextString(m) }
func (*UserUnit) ProtoMessage()    {}

func (m *UserUnit) GetUniqueId() uint32 {
	if m != nil && m.UniqueId != nil {
		return *m.UniqueId
	}
	return 0
}

func (m *UserUnit) GetUnitId() uint32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *UserUnit) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *UserUnit) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *UserUnit) GetAddAttack() int32 {
	if m != nil && m.AddAttack != nil {
		return *m.AddAttack
	}
	return 0
}

func (m *UserUnit) GetAddDefence() int32 {
	if m != nil && m.AddDefence != nil {
		return *m.AddDefence
	}
	return 0
}

func (m *UserUnit) GetAddHp() int32 {
	if m != nil && m.AddHp != nil {
		return *m.AddHp
	}
	return 0
}

func (m *UserUnit) GetLimitbreakLv() int32 {
	if m != nil && m.LimitbreakLv != nil {
		return *m.LimitbreakLv
	}
	return 0
}

func (m *UserUnit) GetGetTime() int32 {
	if m != nil && m.GetTime != nil {
		return *m.GetTime
	}
	return 0
}

type ReqGetUnitResource struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitId           []uint32     `protobuf:"varint,2,rep,name=unitId" json:"unitId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetUnitResource) Reset()         { *m = ReqGetUnitResource{} }
func (m *ReqGetUnitResource) String() string { return proto.CompactTextString(m) }
func (*ReqGetUnitResource) ProtoMessage()    {}

func (m *ReqGetUnitResource) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetUnitResource) GetUnitId() []uint32 {
	if m != nil {
		return m.UnitId
	}
	return nil
}

type RspGetUnitResource struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Server           *string         `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	Unitres          []*UnitResource `protobuf:"bytes,3,rep,name=unitres" json:"unitres,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RspGetUnitResource) Reset()         { *m = RspGetUnitResource{} }
func (m *RspGetUnitResource) String() string { return proto.CompactTextString(m) }
func (*RspGetUnitResource) ProtoMessage()    {}

func (m *RspGetUnitResource) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetUnitResource) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *RspGetUnitResource) GetUnitres() []*UnitResource {
	if m != nil {
		return m.Unitres
	}
	return nil
}

type ReqGetUserUnit struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitId           []uint32     `protobuf:"varint,2,rep,name=unitId" json:"unitId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetUserUnit) Reset()         { *m = ReqGetUserUnit{} }
func (m *ReqGetUserUnit) String() string { return proto.CompactTextString(m) }
func (*ReqGetUserUnit) ProtoMessage()    {}

func (m *ReqGetUserUnit) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetUserUnit) GetUnitId() []uint32 {
	if m != nil {
		return m.UnitId
	}
	return nil
}

type RspGetUserUnit struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Unit             []*UserUnit  `protobuf:"bytes,2,rep,name=unit" json:"unit,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetUserUnit) Reset()         { *m = RspGetUserUnit{} }
func (m *RspGetUserUnit) String() string { return proto.CompactTextString(m) }
func (*RspGetUserUnit) ProtoMessage()    {}

func (m *RspGetUserUnit) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetUserUnit) GetUnit() []*UserUnit {
	if m != nil {
		return m.Unit
	}
	return nil
}

type UserInfo struct {
	Uuid             *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	UserName         *string `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	Rank             *int32  `protobuf:"varint,4,opt,name=rank" json:"rank,omitempty"`
	Exp              *int32  `protobuf:"varint,5,opt,name=exp" json:"exp,omitempty"`
	StaminaNow       *int32  `protobuf:"varint,6,opt,name=staminaNow" json:"staminaNow,omitempty"`
	StaminaMax       *int32  `protobuf:"varint,7,opt,name=staminaMax" json:"staminaMax,omitempty"`
	StaminaRecover   *uint32 `protobuf:"varint,8,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	LoginTime        *uint32 `protobuf:"varint,9,opt,name=loginTime" json:"loginTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}

func (m *UserInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *UserInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *UserInfo) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *UserInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *UserInfo) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *UserInfo) GetStaminaNow() int32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return 0
}

func (m *UserInfo) GetStaminaMax() int32 {
	if m != nil && m.StaminaMax != nil {
		return *m.StaminaMax
	}
	return 0
}

func (m *UserInfo) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

func (m *UserInfo) GetLoginTime() uint32 {
	if m != nil && m.LoginTime != nil {
		return *m.LoginTime
	}
	return 0
}

type AccountInfo struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Review           *uint32 `protobuf:"varint,2,opt,name=review" json:"review,omitempty"`
	PayTotal         *uint32 `protobuf:"varint,3,opt,name=payTotal" json:"payTotal,omitempty"`
	PayMonth         *uint32 `protobuf:"varint,4,opt,name=payMonth" json:"payMonth,omitempty"`
	Money            *uint32 `protobuf:"varint,5,opt,name=money" json:"money,omitempty"`
	StonePay         *uint32 `protobuf:"varint,6,opt,name=stonePay" json:"stonePay,omitempty"`
	StoneFree        *uint32 `protobuf:"varint,7,opt,name=stoneFree" json:"stoneFree,omitempty"`
	Stone            *uint32 `protobuf:"varint,8,opt,name=stone" json:"stone,omitempty"`
	FriendPoint      *uint32 `protobuf:"varint,9,opt,name=friendPoint" json:"friendPoint,omitempty"`
	TotalUnit        *uint32 `protobuf:"varint,10,opt,name=totalUnit" json:"totalUnit,omitempty"`
	TotalParty       *uint32 `protobuf:"varint,11,opt,name=totalParty" json:"totalParty,omitempty"`
	TotalFriend      *uint32 `protobuf:"varint,12,opt,name=totalFriend" json:"totalFriend,omitempty"`
	FirstSelectNum   *uint32 `protobuf:"varint,13,opt,name=firstSelectNum" json:"firstSelectNum,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AccountInfo) Reset()         { *m = AccountInfo{} }
func (m *AccountInfo) String() string { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()    {}

func (m *AccountInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *AccountInfo) GetReview() uint32 {
	if m != nil && m.Review != nil {
		return *m.Review
	}
	return 0
}

func (m *AccountInfo) GetPayTotal() uint32 {
	if m != nil && m.PayTotal != nil {
		return *m.PayTotal
	}
	return 0
}

func (m *AccountInfo) GetPayMonth() uint32 {
	if m != nil && m.PayMonth != nil {
		return *m.PayMonth
	}
	return 0
}

func (m *AccountInfo) GetMoney() uint32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *AccountInfo) GetStonePay() uint32 {
	if m != nil && m.StonePay != nil {
		return *m.StonePay
	}
	return 0
}

func (m *AccountInfo) GetStoneFree() uint32 {
	if m != nil && m.StoneFree != nil {
		return *m.StoneFree
	}
	return 0
}

func (m *AccountInfo) GetStone() uint32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *AccountInfo) GetFriendPoint() uint32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return 0
}

func (m *AccountInfo) GetTotalUnit() uint32 {
	if m != nil && m.TotalUnit != nil {
		return *m.TotalUnit
	}
	return 0
}

func (m *AccountInfo) GetTotalParty() uint32 {
	if m != nil && m.TotalParty != nil {
		return *m.TotalParty
	}
	return 0
}

func (m *AccountInfo) GetTotalFriend() uint32 {
	if m != nil && m.TotalFriend != nil {
		return *m.TotalFriend
	}
	return 0
}

func (m *AccountInfo) GetFirstSelectNum() uint32 {
	if m != nil && m.FirstSelectNum != nil {
		return *m.FirstSelectNum
	}
	return 0
}

type UserQuestInfo struct {
	QuestId          *int32 `protobuf:"varint,1,opt,name=questId" json:"questId,omitempty"`
	QuestCleared     *bool  `protobuf:"varint,2,opt,name=questCleared" json:"questCleared,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UserQuestInfo) Reset()         { *m = UserQuestInfo{} }
func (m *UserQuestInfo) String() string { return proto.CompactTextString(m) }
func (*UserQuestInfo) ProtoMessage()    {}

func (m *UserQuestInfo) GetQuestId() int32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *UserQuestInfo) GetQuestCleared() bool {
	if m != nil && m.QuestCleared != nil {
		return *m.QuestCleared
	}
	return false
}

type PartyItem struct {
	UnitPos          *int32 `protobuf:"varint,1,opt,name=unitPos" json:"unitPos,omitempty"`
	UnitUniqueId     *int32 `protobuf:"varint,2,opt,name=unitUniqueId" json:"unitUniqueId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PartyItem) Reset()         { *m = PartyItem{} }
func (m *PartyItem) String() string { return proto.CompactTextString(m) }
func (*PartyItem) ProtoMessage()    {}

func (m *PartyItem) GetUnitPos() int32 {
	if m != nil && m.UnitPos != nil {
		return *m.UnitPos
	}
	return 0
}

func (m *PartyItem) GetUnitUniqueId() int32 {
	if m != nil && m.UnitUniqueId != nil {
		return *m.UnitUniqueId
	}
	return 0
}

type UnitParty struct {
	Id               *int32       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Items            []*PartyItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *UnitParty) Reset()         { *m = UnitParty{} }
func (m *UnitParty) String() string { return proto.CompactTextString(m) }
func (*UnitParty) ProtoMessage()    {}

func (m *UnitParty) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UnitParty) GetItems() []*PartyItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type UserInfoDetail struct {
	User             *UserInfo      `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Account          *AccountInfo   `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Quest            *UserQuestInfo `protobuf:"bytes,3,opt,name=quest" json:"quest,omitempty"`
	Unit             *UserUnit      `protobuf:"bytes,4,opt,name=unit" json:"unit,omitempty"`
	PartyList        []*UnitParty   `protobuf:"bytes,5,rep,name=partyList" json:"partyList,omitempty"`
	CurrentParty     *int32         `protobuf:"varint,6,opt,name=currentParty" json:"currentParty,omitempty"`
	Login            *LoginInfo     `protobuf:"bytes,7,opt,name=login" json:"login,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *UserInfoDetail) Reset()         { *m = UserInfoDetail{} }
func (m *UserInfoDetail) String() string { return proto.CompactTextString(m) }
func (*UserInfoDetail) ProtoMessage()    {}

func (m *UserInfoDetail) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserInfoDetail) GetAccount() *AccountInfo {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *UserInfoDetail) GetQuest() *UserQuestInfo {
	if m != nil {
		return m.Quest
	}
	return nil
}

func (m *UserInfoDetail) GetUnit() *UserUnit {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *UserInfoDetail) GetPartyList() []*UnitParty {
	if m != nil {
		return m.PartyList
	}
	return nil
}

func (m *UserInfoDetail) GetCurrentParty() int32 {
	if m != nil && m.CurrentParty != nil {
		return *m.CurrentParty
	}
	return 0
}

func (m *UserInfoDetail) GetLogin() *LoginInfo {
	if m != nil {
		return m.Login
	}
	return nil
}

type TerminalInfo struct {
	Channel          *string `protobuf:"bytes,1,opt,name=channel" json:"channel,omitempty"`
	DeviceName       *string `protobuf:"bytes,2,opt,name=deviceName" json:"deviceName,omitempty"`
	Uuid             *string `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	Os               *string `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TerminalInfo) Reset()         { *m = TerminalInfo{} }
func (m *TerminalInfo) String() string { return proto.CompactTextString(m) }
func (*TerminalInfo) ProtoMessage()    {}

func (m *TerminalInfo) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *TerminalInfo) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *TerminalInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *TerminalInfo) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

type FriendData struct {
	UserId            *uint32       `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	FriendState       *EFriendState `protobuf:"varint,2,opt,name=friendState,enum=bbproto.EFriendState" json:"friendState,omitempty"`
	FriendStateUpdate *uint32       `protobuf:"varint,3,opt,name=friendStateUpdate" json:"friendStateUpdate,omitempty"`
	XXX_unrecognized  []byte        `json:"-"`
}

func (m *FriendData) Reset()         { *m = FriendData{} }
func (m *FriendData) String() string { return proto.CompactTextString(m) }
func (*FriendData) ProtoMessage()    {}

func (m *FriendData) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *FriendData) GetFriendState() EFriendState {
	if m != nil && m.FriendState != nil {
		return *m.FriendState
	}
	return EFriendState_ISFRIEND
}

func (m *FriendData) GetFriendStateUpdate() uint32 {
	if m != nil && m.FriendStateUpdate != nil {
		return *m.FriendStateUpdate
	}
	return 0
}

type FriendInfo struct {
	UserId            *uint32       `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	UserName          *string       `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Rank              *int32        `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
	LastPlayTime      *uint32       `protobuf:"varint,4,opt,name=lastPlayTime" json:"lastPlayTime,omitempty"`
	FriendState       *EFriendState `protobuf:"varint,5,opt,name=friendState,enum=bbproto.EFriendState" json:"friendState,omitempty"`
	FriendStateUpdate *uint32       `protobuf:"varint,6,opt,name=friendStateUpdate" json:"friendStateUpdate,omitempty"`
	FriendPoint       *int32        `protobuf:"varint,7,opt,name=friendPoint" json:"friendPoint,omitempty"`
	Unit              *UserUnit     `protobuf:"bytes,8,opt,name=unit" json:"unit,omitempty"`
	XXX_unrecognized  []byte        `json:"-"`
}

func (m *FriendInfo) Reset()         { *m = FriendInfo{} }
func (m *FriendInfo) String() string { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()    {}

func (m *FriendInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *FriendInfo) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *FriendInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *FriendInfo) GetLastPlayTime() uint32 {
	if m != nil && m.LastPlayTime != nil {
		return *m.LastPlayTime
	}
	return 0
}

func (m *FriendInfo) GetFriendState() EFriendState {
	if m != nil && m.FriendState != nil {
		return *m.FriendState
	}
	return EFriendState_ISFRIEND
}

func (m *FriendInfo) GetFriendStateUpdate() uint32 {
	if m != nil && m.FriendStateUpdate != nil {
		return *m.FriendStateUpdate
	}
	return 0
}

func (m *FriendInfo) GetFriendPoint() int32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return 0
}

func (m *FriendInfo) GetUnit() *UserUnit {
	if m != nil {
		return m.Unit
	}
	return nil
}

type LoginBonus struct {
	Type             *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Value            *int32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	BonusType        *int32 `protobuf:"varint,3,opt,name=bonusType" json:"bonusType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LoginBonus) Reset()         { *m = LoginBonus{} }
func (m *LoginBonus) String() string { return proto.CompactTextString(m) }
func (*LoginBonus) ProtoMessage()    {}

func (m *LoginBonus) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *LoginBonus) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *LoginBonus) GetBonusType() int32 {
	if m != nil && m.BonusType != nil {
		return *m.BonusType
	}
	return 0
}

type LoginInfo struct {
	LoginTotal       *int32        `protobuf:"varint,1,opt,name=loginTotal" json:"loginTotal,omitempty"`
	LoginChain       *int32        `protobuf:"varint,2,opt,name=loginChain" json:"loginChain,omitempty"`
	LastLoginTime    *uint32       `protobuf:"varint,3,opt,name=lastLoginTime" json:"lastLoginTime,omitempty"`
	LastPlayTime     *uint32       `protobuf:"varint,4,opt,name=lastPlayTime" json:"lastPlayTime,omitempty"`
	FriendPointGet   *int32        `protobuf:"varint,5,opt,name=friendPointGet" json:"friendPointGet,omitempty"`
	FriendHelpCount  *int32        `protobuf:"varint,6,opt,name=friendHelpCount" json:"friendHelpCount,omitempty"`
	Bonus            []*LoginBonus `protobuf:"bytes,7,rep,name=bonus" json:"bonus,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *LoginInfo) Reset()         { *m = LoginInfo{} }
func (m *LoginInfo) String() string { return proto.CompactTextString(m) }
func (*LoginInfo) ProtoMessage()    {}

func (m *LoginInfo) GetLoginTotal() int32 {
	if m != nil && m.LoginTotal != nil {
		return *m.LoginTotal
	}
	return 0
}

func (m *LoginInfo) GetLoginChain() int32 {
	if m != nil && m.LoginChain != nil {
		return *m.LoginChain
	}
	return 0
}

func (m *LoginInfo) GetLastLoginTime() uint32 {
	if m != nil && m.LastLoginTime != nil {
		return *m.LastLoginTime
	}
	return 0
}

func (m *LoginInfo) GetLastPlayTime() uint32 {
	if m != nil && m.LastPlayTime != nil {
		return *m.LastPlayTime
	}
	return 0
}

func (m *LoginInfo) GetFriendPointGet() int32 {
	if m != nil && m.FriendPointGet != nil {
		return *m.FriendPointGet
	}
	return 0
}

func (m *LoginInfo) GetFriendHelpCount() int32 {
	if m != nil && m.FriendHelpCount != nil {
		return *m.FriendHelpCount
	}
	return 0
}

func (m *LoginInfo) GetBonus() []*LoginBonus {
	if m != nil {
		return m.Bonus
	}
	return nil
}

type PresentInfo struct {
	SerialId         *uint32 `protobuf:"varint,1,opt,name=serialId" json:"serialId,omitempty"`
	SendTime         *uint32 `protobuf:"varint,2,opt,name=sendTime" json:"sendTime,omitempty"`
	Type             *uint32 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Value1           *uint32 `protobuf:"varint,4,opt,name=value1" json:"value1,omitempty"`
	Value2           *uint32 `protobuf:"varint,5,opt,name=value2" json:"value2,omitempty"`
	Message          *string `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PresentInfo) Reset()         { *m = PresentInfo{} }
func (m *PresentInfo) String() string { return proto.CompactTextString(m) }
func (*PresentInfo) ProtoMessage()    {}

func (m *PresentInfo) GetSerialId() uint32 {
	if m != nil && m.SerialId != nil {
		return *m.SerialId
	}
	return 0
}

func (m *PresentInfo) GetSendTime() uint32 {
	if m != nil && m.SendTime != nil {
		return *m.SendTime
	}
	return 0
}

func (m *PresentInfo) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *PresentInfo) GetValue1() uint32 {
	if m != nil && m.Value1 != nil {
		return *m.Value1
	}
	return 0
}

func (m *PresentInfo) GetValue2() uint32 {
	if m != nil && m.Value2 != nil {
		return *m.Value2
	}
	return 0
}

func (m *PresentInfo) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type SessionInfo struct {
	SessionId        *string `protobuf:"bytes,1,opt,name=sessionId" json:"sessionId,omitempty"`
	Uuid             *string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	UserId           *uint32 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	QuestId          *uint32 `protobuf:"varint,4,opt,name=questId" json:"questId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionInfo) Reset()         { *m = SessionInfo{} }
func (m *SessionInfo) String() string { return proto.CompactTextString(m) }
func (*SessionInfo) ProtoMessage()    {}

func (m *SessionInfo) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *SessionInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *SessionInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SessionInfo) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

type ReqGetUserInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetUserInfo) Reset()         { *m = ReqGetUserInfo{} }
func (m *ReqGetUserInfo) String() string { return proto.CompactTextString(m) }
func (*ReqGetUserInfo) ProtoMessage()    {}

func (m *ReqGetUserInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetUserInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type RspGetUserInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *UserInfo    `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetUserInfo) Reset()         { *m = RspGetUserInfo{} }
func (m *RspGetUserInfo) String() string { return proto.CompactTextString(m) }
func (*RspGetUserInfo) ProtoMessage()    {}

func (m *RspGetUserInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetUserInfo) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

type ReqAuthUser struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Terminal         *TerminalInfo `protobuf:"bytes,2,opt,name=terminal" json:"terminal,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ReqAuthUser) Reset()         { *m = ReqAuthUser{} }
func (m *ReqAuthUser) String() string { return proto.CompactTextString(m) }
func (*ReqAuthUser) ProtoMessage()    {}

func (m *ReqAuthUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqAuthUser) GetTerminal() *TerminalInfo {
	if m != nil {
		return m.Terminal
	}
	return nil
}

type RspAuthUser struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *UserInfo      `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Account          *AccountInfo   `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	Quest            *UserQuestInfo `protobuf:"bytes,4,opt,name=quest" json:"quest,omitempty"`
	UnitPartyList    []*UnitParty   `protobuf:"bytes,5,rep,name=unitPartyList" json:"unitPartyList,omitempty"`
	CurrentUnitParty *int32         `protobuf:"varint,6,opt,name=currentUnitParty" json:"currentUnitParty,omitempty"`
	ServerTime       *uint32        `protobuf:"varint,7,opt,name=serverTime" json:"serverTime,omitempty"`
	Login            *LoginInfo     `protobuf:"bytes,8,opt,name=login" json:"login,omitempty"`
	Friend           []*FriendInfo  `protobuf:"bytes,9,rep,name=friend" json:"friend,omitempty"`
	Helper           []*FriendInfo  `protobuf:"bytes,10,rep,name=helper" json:"helper,omitempty"`
	Present          []*PresentInfo `protobuf:"bytes,11,rep,name=present" json:"present,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RspAuthUser) Reset()         { *m = RspAuthUser{} }
func (m *RspAuthUser) String() string { return proto.CompactTextString(m) }
func (*RspAuthUser) ProtoMessage()    {}

func (m *RspAuthUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspAuthUser) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *RspAuthUser) GetAccount() *AccountInfo {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *RspAuthUser) GetQuest() *UserQuestInfo {
	if m != nil {
		return m.Quest
	}
	return nil
}

func (m *RspAuthUser) GetUnitPartyList() []*UnitParty {
	if m != nil {
		return m.UnitPartyList
	}
	return nil
}

func (m *RspAuthUser) GetCurrentUnitParty() int32 {
	if m != nil && m.CurrentUnitParty != nil {
		return *m.CurrentUnitParty
	}
	return 0
}

func (m *RspAuthUser) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *RspAuthUser) GetLogin() *LoginInfo {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *RspAuthUser) GetFriend() []*FriendInfo {
	if m != nil {
		return m.Friend
	}
	return nil
}

func (m *RspAuthUser) GetHelper() []*FriendInfo {
	if m != nil {
		return m.Helper
	}
	return nil
}

func (m *RspAuthUser) GetPresent() []*PresentInfo {
	if m != nil {
		return m.Present
	}
	return nil
}

type ReqLoginPack struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	GetLogin         *bool        `protobuf:"varint,3,opt,name=getLogin" json:"getLogin,omitempty"`
	GetFriend        *bool        `protobuf:"varint,4,opt,name=getFriend" json:"getFriend,omitempty"`
	GetHelper        *bool        `protobuf:"varint,5,opt,name=getHelper" json:"getHelper,omitempty"`
	GetPresent       *bool        `protobuf:"varint,6,opt,name=getPresent" json:"getPresent,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqLoginPack) Reset()         { *m = ReqLoginPack{} }
func (m *ReqLoginPack) String() string { return proto.CompactTextString(m) }
func (*ReqLoginPack) ProtoMessage()    {}

func (m *ReqLoginPack) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqLoginPack) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ReqLoginPack) GetGetLogin() bool {
	if m != nil && m.GetLogin != nil {
		return *m.GetLogin
	}
	return false
}

func (m *ReqLoginPack) GetGetFriend() bool {
	if m != nil && m.GetFriend != nil {
		return *m.GetFriend
	}
	return false
}

func (m *ReqLoginPack) GetGetHelper() bool {
	if m != nil && m.GetHelper != nil {
		return *m.GetHelper
	}
	return false
}

func (m *ReqLoginPack) GetGetPresent() bool {
	if m != nil && m.GetPresent != nil {
		return *m.GetPresent
	}
	return false
}

type RspLoginPack struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Login            *LoginInfo     `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
	Friend           []*FriendInfo  `protobuf:"bytes,3,rep,name=friend" json:"friend,omitempty"`
	Helper           []*FriendInfo  `protobuf:"bytes,4,rep,name=helper" json:"helper,omitempty"`
	Present          []*PresentInfo `protobuf:"bytes,5,rep,name=present" json:"present,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RspLoginPack) Reset()         { *m = RspLoginPack{} }
func (m *RspLoginPack) String() string { return proto.CompactTextString(m) }
func (*RspLoginPack) ProtoMessage()    {}

func (m *RspLoginPack) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspLoginPack) GetLogin() *LoginInfo {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *RspLoginPack) GetFriend() []*FriendInfo {
	if m != nil {
		return m.Friend
	}
	return nil
}

func (m *RspLoginPack) GetHelper() []*FriendInfo {
	if m != nil {
		return m.Helper
	}
	return nil
}

func (m *RspLoginPack) GetPresent() []*PresentInfo {
	if m != nil {
		return m.Present
	}
	return nil
}

type ReqModifyUnitParty struct {
	Partys           []*UnitParty `protobuf:"bytes,1,rep,name=partys" json:"partys,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqModifyUnitParty) Reset()         { *m = ReqModifyUnitParty{} }
func (m *ReqModifyUnitParty) String() string { return proto.CompactTextString(m) }
func (*ReqModifyUnitParty) ProtoMessage()    {}

func (m *ReqModifyUnitParty) GetPartys() []*UnitParty {
	if m != nil {
		return m.Partys
	}
	return nil
}

func init() {
	proto.RegisterEnum("bbproto.EUnitType", EUnitType_name, EUnitType_value)
	proto.RegisterEnum("bbproto.EUnitRace", EUnitRace_name, EUnitRace_value)
	proto.RegisterEnum("bbproto.EQuestState", EQuestState_name, EQuestState_value)
	proto.RegisterEnum("bbproto.EFriendState", EFriendState_name, EFriendState_value)
}
