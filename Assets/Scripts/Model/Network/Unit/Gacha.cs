// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using bbproto;

public class Gacha: ProtoManager {
    // req && rsp
    private bbproto.ReqGacha reqGacha;
    private bbproto.RspGacha rspGacha;
    
    private int gachaId;
    private int gachaCount;

    public Gacha() {
    }
    
    ~Gacha() {
    }
    
    public static void SendRequest(DataListener callback, int gachaId, int gachaCount) {
        Gacha gacha = new Gacha();
        gacha.gachaId = gachaId;
        gacha.gachaCount = gachaCount;
        gacha.OnRequest(null, callback);
    }
    
    //Property: request server parameters
    
    //make request packet==>TODO rename to request
    public override bool MakePacket() {
        Proto = Protocol.GACHA;
        reqType = typeof(ReqGacha);
        rspType = typeof(RspGacha);
        
        reqGacha = new ReqGacha();
        reqGacha.header = new ProtoHeader();
        reqGacha.header.apiVer = Protocol.API_VERSION;
        reqGacha.header.userId = DataCenter.Instance.UserInfo.UserId;
        
        //request params

        reqGacha.gachaId = gachaId;
        reqGacha.gachaCount = gachaCount;
        //        reqGacha.partUniqueId
        
        ErrorMsg err = SerializeData(reqGacha); // save to Data for send out
        
        return (err.Code == (int)ErrorCode.SUCCESS);
    }
//    
//    private void OnRspGacha(object data) {
//        if (data == null)
//            return;
//        
//        LogHelper.Log("OnRspGacha() begin");
//        LogHelper.Log(data);
//        bbproto.RspGacha rsp = data as bbproto.RspGacha;
//        
//        if (rsp.header.code != (int)ErrorCode.SUCCESS) {
//            LogHelper.Log("RspGacha code:{0}, error:{1}", rsp.header.code, rsp.header.error);
//            return;
//        }
//        
//        DataCenter.Instance.AccountInfo.FriendPoint = rsp.friendPoint;
//        DataCenter.Instance.AccountInfo.Stone = rsp.stone;
//
//        // TODO do evolve start over;
//        LogHelper.Log("OnRspGacha() finished, friendPoint {0}, stone {1}"
//                      ,  DataCenter.Instance.AccountInfo.FriendPoint, DataCenter.Instance.AccountInfo.Stone);
//        
//        // record
//        List<UserUnit> unitList = rsp.unitList;
//
//        LogHelper.LogError("before gacha, userUnitList count {0}", DataCenter.Instance.MyUnitList.GetAll().Count);
//        // delete unit;
//        DataCenter.Instance.MyUnitList.AddMyUnitList(unitList);
//        DataCenter.Instance.UserUnitList.AddMyUnitList(unitList);
//        
//        LogHelper.LogError("after sell, userUnitList count {0}", DataCenter.Instance.MyUnitList.GetAll().Count);
//    }
}

public class NetWorkGachaTester {
    public NetWorkGachaTester() {
        
    }

    public static void Test(){
        LogHelper.Log("NetWorkGachaTester.Test() start");
//        NetWorkGachaTester tester = new NetWorkGachaTester();
//        Gacha.SendRequest(tester.OnRspGacha, 1, 1);
//        Gacha.SendRequest(tester.OnRspGacha, 2, 9);
    }

}
