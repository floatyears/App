// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using bbproto;

public class Gacha: ProtoManager {
    // req && rsp
    private bbproto.ReqGacha reqGacha;
    private bbproto.RspGacha rspGacha;
    
    private int gachaId;
    private int gachaCount;

    public Gacha() {
    }
    
    ~Gacha() {
    }
    
    public static void SendRequest(DataListener callback, int gachaId, int gachaCount) {
        Gacha gacha = new Gacha();
        gacha.gachaId = gachaId;
        gacha.gachaCount = gachaCount;
        gacha.OnRequest(null, callback);
    }
    
    //Property: request server parameters
    
    //make request packet==>TODO rename to request
    public override bool MakePacket() {
        Proto = Protocol.SELL_UNIT;
        reqType = typeof(ReqGacha);
        rspType = typeof(RspGacha);
        
        reqGacha = new ReqGacha();
        reqGacha.header = new ProtoHeader();
        reqGacha.header.apiVer = Protocol.API_VERSION;
        reqGacha.header.userId = DataCenter.Instance.UserInfo.UserId;
        
        //request params

        reqGacha.gachaId = gachaId;
        reqGacha.gachaCount = gachaCount;
        //        reqGacha.partUniqueId
        
        ErrorMsg err = SerializeData(reqGacha); // save to Data for send out
        
        return (err.Code == (int)ErrorCode.SUCCESS);
    }
    
    private void OnRspGacha(object data) {
        if (data == null)
            return;
        
        LogHelper.Log("OnRspGacha() begin");
        LogHelper.Log(data);
        bbproto.RspGacha rsp = data as bbproto.RspGacha;
        
        if (rsp.header.code != (int)ErrorCode.SUCCESS) {
            LogHelper.Log("RspGacha code:{0}, error:{1}", rsp.header.code, rsp.header.error);
            return;
        }
//        
//        int money = rsp.money;
//        int gotMoney = rsp.gotMoney;
//        List<UserUnit> unitList = rsp.unitList;
//        // TODO do evolve start over;
//        LogHelper.Log("OnRspGacha() finished, money {0}, gotMoney {1}, unitList {2}"
//                      , money, gotMoney, unitList);
//        
//        // record
//        DataCenter.Instance.AccountInfo.Money = rsp.money;
//        
//        LogHelper.LogError("before sell, userUnitList count {0}", DataCenter.Instance.MyUnitList.GetAll().Count);
//        // delete unit;
//        foreach (uint unitUniqueId in unitUniqueIdList) {
//            LogHelper.LogError("====================sell unit, so remove it , uniqueId {0}============", unitUniqueId);
//            DataCenter.Instance.MyUnitList.DelMyUnit(unitUniqueId);
//        }
//        
//        LogHelper.LogError("after sell, userUnitList count {0}", DataCenter.Instance.MyUnitList.GetAll().Count);
    }
}
