// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using bbproto;


public class FriendMaxExpand: ProtoManager {
    // req && rsp
    private bbproto.ReqFriendMaxExpand reqFriendMaxExpand;
    private bbproto.RspFriendMaxExpand rspFriendMaxExpand;
    // state for req
    // data

    public FriendMaxExpand() {
    }
    
    ~FriendMaxExpand () {
    }
    
    public static void SendRequest(DataListener callBack) {
        FriendMaxExpand acceptFriend = new FriendMaxExpand();
        acceptFriend.OnRequest(null, callBack);
    }
    
    //Property: request server parameters
    //    public uint FriendUid { get { return friendUid; } set { friendUid = value; } }
    
    
    //make request packet==>TODO rename to request
    public override bool MakePacket() {
        Proto = Protocol.FRIEND_MAX_EXPAND;
        reqType = typeof(ReqFriendMaxExpand);
        rspType = typeof(RspFriendMaxExpand);
        
        reqFriendMaxExpand = new ReqFriendMaxExpand();
        reqFriendMaxExpand.header = new ProtoHeader();
        reqFriendMaxExpand.header.apiVer = Protocol.API_VERSION;
        reqFriendMaxExpand.header.userId = DataCenter.Instance.UserInfo.UserId;

        //request params
        ErrorMsg err = SerializeData(reqFriendMaxExpand); // save to Data for send out
        
        return (err.Code == (int)ErrorCode.SUCCESS);
    }
    
}

